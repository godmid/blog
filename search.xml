<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>新玩具</title>
      <link href="/2021/08/09/xin-wan-ju/"/>
      <url>/2021/08/09/xin-wan-ju/</url>
      
        <content type="html"><![CDATA[<center>   </center><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>数位板就不介绍了，省的有人说我打广告，不过我买的这个数位板是真的大，和我笔记本屏幕差不多了（我笔记本13.3）</p><p>电脑上也没有什么可以用来测试这个板子的软件，所以我就用了下微软的那个白板。简单的试了下感觉还可以。</p><p>ps：最后那个图是我瞎画的</p><h3 id="试用"><a href="#试用" class="headerlink" title="试用"></a>试用</h3><p>这个新玩具看着还可以，颜值也不低，就是不耐脏，可以明显的看出使用痕迹。</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210809191034.jpg"></p><p>简单的试用了几下，手感还不错，就是bug略多。因为我有三块屏幕，来回切换时老是卡在一个地方，并且还有空气墙，数位板不能在整块屏幕上写字（(╯▔皿▔)╯）</p><h3 id="修正bug"><a href="#修正bug" class="headerlink" title="修正bug"></a>修正bug</h3><p>但是问题不大，谁让咱是科技宅。经过简单的测试与判断，这个板子应该是在映射时发生了点小问题，导致了不能在比板子大的地方书写。在修正这个bug前，我找到了一个折中方案</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210809191433.jpg"></p><p>我有一块这样的小屏幕 ，大概10寸（忽略那条黑线）。50块钱从学弟手里搞的，原来一直当作状态屏使用了（显示电脑的资源）。现在看来可以给它分配个新任务了；</p><p>可以用它来显示whiteboard；</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210809191906.jpg"></p><p>然后它完美的完成了任务（内心ps：垃圾板子驱动，占我一块屏）；</p><p>试用了一下白板的一些功能，比如图形自动矫正之类的，画了一篇屑作。</p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210809190330.png" alt="瞎几把画的"></p><p>右下角是我的签名，我打赌你猜不出来写的啥(<em>^_^</em>)</p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>我也是刚拿到这个板子一天不到，还有很多功能（bug）还没测试，例如上面的按键，对于手机的适配等。改天没事了测试一下再补上吧。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>无线音频发射器（简易）</title>
      <link href="/2021/08/07/wu-xian-yin-pin-fa-she-qi/"/>
      <url>/2021/08/07/wu-xian-yin-pin-fa-she-qi/</url>
      
        <content type="html"><![CDATA[<center>   </center><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这个小实验是我模仿油管中的一个小玩意做的（可惜实物已经被我拆了），所以大伙权当开开眼了。</p><p>大致长这个模样<strong>↓</strong></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210807173829.png"></p><p><a href="https://www.bilibili.com/video/BV1cX4y1G7Jc">原视频链接</a></p><p>感兴趣的可以去康康</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210807171627.png" alt="原理图"></p><p>其实这个小实验的原理也很简单，但是也有难点，难点都在那个三极管上面其他的倒是没啥</p><p>可惜我没时间讲述三极管的基本原理，在此借别人的光照亮一下。</p><p><a href="https://www.bilibili.com/video/BV1Fx411D71n">三极管动画演示</a></p><p><a href="https://www.bilibili.com/video/BV1kv411574Y">三极管原理</a></p><p>在此只需要知道三极管是一个用于信号放大的器件就可以了（改天没事了我亲自讲述一下三极管的原理）。用三极管组成一个共射放大电路，并使其工作在它的放大区，然后放大了咪头（麦克风）或者其他声源产生的电信号(<a href="https://www.bilibili.com/video/BV1sK4y1n79k">麦克风原理</a>)。之后这个信号作用在激光管上（工作电压看型号而定），就可以产生和声信号对应的光亮变化。你也可以不用麦克风，改用一根音频线（就是你的耳机线，只不过是只使用单声道）。如果使用麦克风的话，麦克风必须是有源的（用于上面那个电路的话）。</p><p>而其他的元器件，类如电阻、电容、开关（开关就不用说了吧）,电阻是用来限流的，电容的话，看下面这个视频你就会有个大致的了解了。</p><p><a href="https://www.bilibili.com/video/BV1mK4y1f7DQ">电容作用</a></p><p>基本原理大致就这样，就是用激光发出去你的声信号，或者说把你的声信号加载到光信号上面。</p><p>我们再来康康<strong>接收端</strong></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210807174025.png" alt="太阳能板"></p><p>接收端是一个太阳能板（头一次见用这个当接受器的），太阳能板可以将光信号转化成电信号（相当于一个解码器），然后我们只需要放大这个信号就可以了。只是这个信号放大的倍数较大，建议用个成品，类似于音响之类的，或者你可以用个功放（全损音质警告）。</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210807174453.png"></p><p>然后就可以听到传输出去的声音了。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>之前我把它做出来了，然后写文前感觉没啥用被我给拆了（淦）；</p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210807175812.jpg" style="zoom:67%;"><p>如图所示，被我拆下来后的模块。蓝色的是功放，带个咪头的是麦克，黑的那个是激光管，全部被做成模块化</p><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>传输距离远，电路简单，造价便宜（一共花不了十块钱）</p><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><p>干扰多，户外受天气影响较大，户内也受灯光影响，音质感人，不可调参</p><h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><p>如果使用的是有源麦克风，那么只需要做出来两个就可以实现远距离通话了，具体距离看你的激光源有多nb吧。原理上来讲是可以无线远的（因为卫星也有类似的通讯模式）。二十块钱做个对讲机，岂不美哉！</p><p>本次分享就到这了，以后有时间再(￣_,￣ )补写上我自己做的成品。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>电机驱动模块-TB6612FNG</title>
      <link href="/2021/07/31/dian-ji-qu-dong-mo-kuai-tb6612fng/"/>
      <url>/2021/07/31/dian-ji-qu-dong-mo-kuai-tb6612fng/</url>
      
        <content type="html"><![CDATA[<center>   </center><span id="more"></span><p>TB6612的用法<br>双驱动，也就是可以驱动两个电机。<br>STBY:接单片机的IO口，清零，电机全部停止。<br>置1，通过AIN1 AIN2,BIN1,BIN2来控制正反转<br>VM 接12V电源<br>VCC 接5V电源<br>GND 接地</p><p>驱动1路<br>PWMA 接单片机的PWM口<br>TB6612FNG每通道输出最高<strong>1A</strong>的连续驱动电流，启动峰值电流达2A／3A(连续脉冲／单脉冲)；4种电机控制模式：正转／反转／制动／停止；<strong>PWM支持频率高达100 kHz</strong>；待机状态；片内低压检测电路与热停机保护电路；工作温度：-20～85℃；SSOP24小型贴片封装。<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20170715172312975" alt="这里写图片描述"><br>[刹车和自由停车有什么区别]</p><p><strong>刹车耗能，自由停车不耗能。刹车耗能来源于刹车片摩擦和电机制动，自由停车相当于断电。</strong><em>冥狐注</em></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/image-20210731211614943.png" alt="image-20210731211614943"></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20170715172500813" alt="接法"></p><p><strong>TB6612FNG的主要引脚功能：</strong><br>(1)<strong>AINl／AIN2、BIN1／BIN2、PWMA／PWMB为控制信号输入端；</strong><br>(2)<strong>AO1／A02、B01／B02为2路电机控制输出端；</strong><br>(3)<strong>STBY为正常工作／待机状态控制引脚；</strong><br>(4)<strong>VM(3～13.5 V)和VCC(2．7～5．5 V)分别为电机驱动电压输入和逻辑电平输入端。</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>陀螺仪基本原理</title>
      <link href="/2021/07/27/tuo-luo-yi-yuan-li/"/>
      <url>/2021/07/27/tuo-luo-yi-yuan-li/</url>
      
        <content type="html"><![CDATA[<center>   </center><span id="more"></span><p>本帖翻译自 <a href="http://www.starlino.com/imu_guide.html">IMU（加速度计和陀螺仪设备）在嵌入式应用中使用的指南。</a><br>这篇文章主要介绍加速度计和陀螺仪的数学模型和基本算法，以及如何融合这两者，侧重算法、思想的讨论</p><p>介绍<br>本指南旨在向兴趣者介绍惯性MEMS（微机电系统）传感器，特别是加速度计和陀螺仪以及其他整合IMU（ <a href="http://en.wikipedia.org/wiki/Inertial_measurement_unit">惯性测量单元</a>）设备。<br><img src="http://image.geek-workshop.com/forum/201208/22/163854b9769h9p7kvq7omh.jpg" alt="1.jpg"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxM3xhNDgxYjAxZnwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ==&amp;nothumb=yes"><strong>下载附件</strong>(16.48 KB)</a></p><p>IMU单元例子：上图中MCU顶端的 <a href="http://www.starlino.com/store/acc-gyro">ACC Gyro 6DOF</a>，名为 <a href="http://www.gadgetgangster.com/find-a-project/56?projectnum=240">USBThumb</a>，支持USB/串口通信</p><p>在这篇文章中我将概括这么几个基本并且重要的话题：<br>- 加速度计（accelerometer）检测什么<br>- 陀螺仪（gyroscope，也称作 gyro）检测什么<br>- 如何将传感器ADC读取的数据转换为物理单位（加速度传感器的单位是g，陀螺仪的单位是 度/秒）<br>- 如何结合加速度传感器和陀螺仪的数据以得到设备和地平面之间的倾角的准确信息<br>在整篇文章中我尽量将数学运算降低到最少。如果你知道什么是正弦、余弦、正切函数，那无论你的项目使用哪种平台你应该都会明白和运用这篇文章中的思想，这些平台如Arduino、Propeller、Basic Stamp、Ateml芯片、PIC芯片等等。总有些人认为使用IMU单元需要复杂的数学运算（复杂的FIR或IIR滤波，如卡尔曼滤波，Parks-McClellan滤波等）。你如果研究这些会得到很棒且很复杂的结果。我解释事情的方式，只需要基本的数学。我非常坚信简单的原则。我认为一个简单的系统更容易操作和监控，另外许多嵌入式设备并不具备能力和资源去实现需要进行矩阵运算的复杂算法。<br>我会用我设计的一个新IMU模块—— <a href="http://www.starlino.com/store/acc-gyro">Acc_Gyro Accelerometer + Gyro IMU</a>作为例子。在下面的例子中我们会使用这个设备的参数。用这个模块作为介绍非常合适，因为它由3个设备组成：<br>- LIS331AL ( <a href="http://www.starlino.com/wp-content/uploads/data/acc_gyro/LIS331AL.pdf">datasheet</a>) – 3轴 2G 模拟加速度计<br>- LPR550AL ( <a href="http://www.starlino.com/wp-content/uploads/data/acc_gyro/LPR550AL.pdf">datasheet</a>) – 双轴（俯仰、翻滚） 500°/s 加速度传感器<br>- LY550ALH ( <a href="http://www.starlino.com/wp-content/uploads/data/acc_gyro/LY550ALH.pdf">datasheet</a>) –单轴（偏航）陀螺仪 最后这个设备在这篇介绍中不使用，不过他在 <a href="http://www.starlino.com/dcm_tutorial.html">DCM Matrix implementation</a>中有重要作用<br>它们一起组成了一个6自由度的惯性测量单元。这是个花哨的名字！然而，在花哨的名字后面是个非常有用的设备组合，接下来我们会详细介绍之。<br>第一部分 加速度计<br>要了解这个模块我们先从加速度计开始。当我们在想象一个加速度计的时候我们可以把它想作一个圆球在一个方盒子中。你可能会把它想作一个饼干或者甜圈，但我就把它当做一个球好了：<br><img src="http://image.geek-workshop.com/forum/201208/22/163855d7e99tne77u81b12.png" alt="2.png"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxNHw0ZDkxOTU3NXwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ==&amp;nothumb=yes"><strong>下载附件</strong>(15.85 KB)</a></p><p>我们假定这个盒子不在重力场中或者其他任何会影响球的位置的场中，球处于盒子的正中央。你可以想象盒子在外太空中，远离任何天体，如果很难想象，那就当做盒子在航天飞机中，一切东西都处于无重力状态。在上面的图中你可以看到我们给每个轴分配了一对墙（我们移除了Y+以此来观察里面的情况）。设想每面墙都能感测压力。如果我们突然把盒子向左移动（加速度为1g=9.8m/s^2），那么球会撞上X-墙。然后我们检测球撞击墙面产生的压力，X轴输出值为-1g。<br><img src="http://image.geek-workshop.com/forum/201208/22/163856r6orns2rocpzz5sp.png" alt="3.png"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxNXwxM2U2NjRkZXwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ==&amp;nothumb=yes"><strong>下载附件</strong>(19.23 KB)</a></p><p>请注意加速度计检测到得力的方向与它本身加速度的方向是相反的。这种力量通常被称为 <a href="http://en.wikipedia.org/wiki/Fictitious_force">惯性力或假想力</a> 。在这个模型中你你应该学到加速度计是通过间接测量力对一个墙面的作用来测量加速度的，在实际应用中，可能通过弹簧等装置来测量力。这个力可以是加速度引起的，但在下面的例子中，我们会发现它不一定是加速度引起的。<br>如果我们把模型放在地球上，球会落在Z-墙面上并对其施加一个1g的力，见下图：<br><img src="http://image.geek-workshop.com/forum/201208/22/163856lxjiqd8xlvzh775b.png" alt="4.png"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxNnxjNGIzNDM1YnwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ==&amp;nothumb=yes"><strong>下载附件</strong>(19.54 KB)</a></p><p>在这种情况下盒子没有移动但我们任然读取到Z轴有-1g的值。球在墙壁上施加的压力是由引力造成的。在理论上，它可以是不同类型的力量 - 例如，你可以想象我们的球是铁质的，将一个磁铁放在盒子旁边那球就会撞上另一面墙。引用这个例子只是为了说明加速度计的本质是检测力而非加速度。只是加速度所引起的惯性力正好能被加速度计的检测装置所捕获。<br>虽然这个模型并非一个MEMS传感器的真实构造，但它用来解决与加速度计相关的问题相当有效。实际上有些类似传感器中有金属小球，它们称作倾角开关，但是它们的功能更弱，只能检测设备是否在一定程度内倾斜，却不能得到倾斜的程度。<br>到目前为止，我们已经分析了单轴的加速度计输出，这是使用单轴加速度计所能得到的。三轴加速度计的真正价值在于它们能够检测全部三个轴的惯性力。让我们回到盒子模型，并将盒子向右旋转45度。现在球会与两个面接触：Z-和X-，见下图：<br><img src="http://image.geek-workshop.com/forum/201208/22/163857bferffolflo9ly9l.png" alt="5.png"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxN3w1ZGVjODFhOXwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ==&amp;nothumb=yes"><strong>下载附件</strong>(34.03 KB)</a></p><p>0.71g这个值是不是任意的，它们实际上是1/2的平方根的近似值。我们介绍加速度计的下一个模型时这一点会更清楚。<br>在上一个模型中我们引入了重力并旋转了盒子。在最后的两个例子中我们分析了盒子在两种情况下的输出值，力矢量保持不变。虽然这有助于理解加速度计是怎么和外部力相互作用的，但如果我们将坐标系换为加速度的三个轴并想象矢量力在周围旋转，这会更方便计算。<br><img src="http://image.geek-workshop.com/forum/201208/22/163858sssxmnssijjjczf3.png" alt="6.png"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxOHxjNDNlNzY5Y3wxMzQ2NTg2MjYwfDMxOTV8MTY5NQ==&amp;nothumb=yes"><strong>下载附件</strong>(7.19 KB)</a></p><p>请看看在上面的模型，我保留了轴的颜色，以便你的思维能更好的从上一个模型转到新的模型中。想象新模型中每个轴都分别垂直于原模型中各自的墙面。矢量R是加速度计所检测的矢量（它可能是重力或上面例子中惯性力的合成）。RX，RY，RZ是矢量R在X，Y，Z上的投影。请注意下列关系：<br>，R ^ 2 = RX ^ 2 + RY ^ 2 + RZ ^ 2（ 公式1）<br>此公式等价于 <a href="http://demonstrations.wolfram.com/PythagoreanTheorem3D/">三维空间勾股定理</a>。<br>还记得我刚才说的1/2的平方根0.71不是个随机值吧。如果你把它们代回上式，回顾一下重力加速度是1g，那我们就能验证：<br>1 ^ 2 =（SQRT（1/2））^ 2 + 0 ^ 2 +（SQRT（1/2））^ 2<br>在 公式1中简单的取代： R=1, Rx = -SQRT(1/2), Ry = 0 , Rz = -SQRT(1/2)<br>经过一大段的理论序言后，我们和实际的加速度计很靠近了。RX，RY，RZ值是实际中加速度计输出的线性相关值，你可以用它们进行各种计算。<br>在我们运用它之前我们先讨论一点获取加速度计数据的方法。大多数加速度计可归为两类：数字和模拟。数字加速度计可通过I2C，SPI或USART方式获取信息，而模拟加速度计的输出是一个在预定范围内的电压值，你需要用ADC（模拟量转数字量）模块将其转换为数字值。我将不会详细介绍ADC是怎么工作的，部分原因是这是个很广的话题，另一个原因是不同平台的ADC都会有差别。有些MCU具有内置ADC模块，而有些则需要外部电路进行ADC转换。不管使用什么类型的ADC模块，你都会得到一个在一定范围内的数值。例如一个10位ADC模块的输出值范围在0 .. 1023间，请注意，1023 = 2 ^ 10 -1。一个12位ADC模块的输出值范围在0 .. 4095内，注意，4095 = 2 ^ 12-1。<br>我们继续，先考虑下一个简单的例子，假设我们从10位ADC模块得到了以下的三个轴的数据：<br>AdcRx = 586<br>AdcRy = 630<br>AdcRz = 561<br>每个ADC模块都有一个参考电压，假设在我们的例子中，它是3.3V。要将一个10位的ADC值转成电压值，我们使用下列公式：<br>VoltsRx = AdcRx * VREF / 1023<br>小注：8位ADC的最大值是255 = 2 ^ 8 -1，12位ADC最大值是4095 = 2 ^ 12 -1。<br>将3个轴的值代入上式，得到：<br>VoltsRx = 586 * 3.3 / 1023 =～1.89V（结果取两位小数）<br>VoltsRy = 630 * 3.3 / 1023 =～2.03V<br>VoltsRz = 561 * 3.3 / 1023 =～1.81V<br>每个加速度计都有一个零加速度的电压值，你可以在它的说明书中找到，这个电压值对应于加速度为0g。通过计算相对0g电压的偏移量我们可以得到一个有符号的电压值。比方说，0g电压值 VzeroG= 1.65V，通过下面的方式可以得到相对0g电压的偏移量:<br>DeltaVoltsRx = 1.89V - 1.65V = 0.24V<br>DeltaVoltsRy = 2.03V - 1.65V = 0.38V<br>DeltaVoltsRz = 1.81V - 1.65V = 0.16V<br>现在我们得到了加速度计的电压值，但它的单位还不是g（9.8m/s^2），最后的转换，我们还需要引入加速度计的灵敏度（Sensitivity），单位通常是 mV/g。比方说，加速度计的灵敏度 Sensitivity= 478.5mV / g = 0.4785V /g。灵敏度值可以在加速度计说明书中找到。要获得最后的单位为g的加速度，我们使用下列公式计算：<br>RX = DeltaVoltsRx /Sensitivity<br>RX = 0.24V / 0.4785V / G =～0.5g<br>RY = 0.38V / 0.4785V / G =～0.79g<br>RZ = 0.16V / 0.4785V / G =～0.33g<br>当然，我们可以把所有的步骤全部放在一个式子里，但我想通过介绍每一个步骤以便让你了解怎么读取一个ADC值并将其转换为单位为g的矢量力的分量。<br>Rx = (AdcRx * Vref / 1023 – VzeroG) / Sensitivity (公式2)<br>Ry = (AdcRy * Vref / 1023 – VzeroG) / Sensitivity<br>Rz = (AdcRz * Vref / 1023 – VzeroG) / Sensitivity<br>现在我们得到了惯性力矢量的三个分量，如果设备除了重力外不受任何外力影响，那我们就可以认为这个方向就是重力矢量的方向。如果你想计算设备相对于地面的倾角，可以计算这个矢量和Z轴之间的夹角。如果你对每个轴的倾角都感兴趣，你可以把这个结果分为两个分量：X轴、Y轴倾角，这可以通过计算重力矢量和X、Y轴的夹角得到。计算这些角度比你想象的简单，现在我们已经算出了Rx，Ry，Rz的值，让我们回到我们的上一个加速度模型，再加一些标注上去：<br><img src="http://image.geek-workshop.com/forum/201208/22/1638594bjbb147i1lqb7cz.png" alt="7.png"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxOXw1YTRiMGIyYnwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ==&amp;nothumb=yes"><strong>下载附件</strong>(9.9 KB)</a></p><p>我们感兴趣的角度是向量R和X，Y，Z轴之间的夹角，那就令这些角度为Axr，Ayr，Azr。观察由R和Rx组成的直角三角形：<br>cos(Axr) = Rx / R , 类似的：<br>cos(Ayr) = Ry / R<br>cos(Azr) = Rz / R<br>从 公式1我们可以推导出 R = SQRT( Rx^2 + Ry^2 + Rz^2)<br>通过arccos()函数（cos()的反函数）我们可以计算出所需的角度：<br>Axr = arccos(Rx/R)<br>Ayr = arccos(Ry/R)<br>Azr = arccos(Rz/R)<br>我们花了大段的篇幅来解释加速度计模型，最后所要的只是以上这几个公式。根据你的应用场合，你可能会用到我们推导出来的几个过渡公式。我们接下来要介绍陀螺仪模块，并向大家介绍怎么融合加速度计和陀螺仪的数据以得到更精确的倾角值。<br>但在此之前，我们再介绍几个很常用的公式：<br>cosX = cos(Axr) = Rx / R<br>cosY = cos(Ayr) = Ry / R<br>cosZ = cos(Azr) = Rz / R<br>这三个公式通常称作 <a href="http://en.wikipedia.org/wiki/Direction_cosine">方向余弦</a> ，它主要表达了单位向量（长度为1的向量）和R向量具有相同的方向。你可以很容易地验证：<br>SQRT（cosX ^ 2 + COSY ^ 2 + cosZ ^ 2）= 1<br>这是个很好的性质，因为它避免了我们一直检测R向量的模（长度）。通常如果我们只是对惯性力的方向感兴趣，那标准化模长以简化其他计算是个明智的选择。<br>第二部分陀螺仪<br>对于陀螺仪我们将不会像加速度计一样介绍它的等价盒子模型，而是直接跳到加速度计的第二个模型，通过这个模型我们会向大家介绍陀螺仪是怎么工作的。<br><img src="http://image.geek-workshop.com/forum/201208/22/163859eepfepkeh1glt1lw.png" alt="8.png"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQyMHxlMzYwMGE3ZHwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ==&amp;nothumb=yes"><strong>下载附件</strong>(12.55 KB)</a></p><p>陀螺仪的每个通道检测一个轴的旋转。例如，一个2轴陀螺仪检测绕X和Y轴的旋转。为了用数字来表达这些旋转，我们先引进一些符号。首先我们定义：<br>Rxz – 惯性力矢量R在XZ平面上的投影<br>Ryz – 惯性力矢量R在YZ平面的上投影<br>在由Rxz和Rz组成的直角三角形中，运用勾股定理可得：<br>Rxz^2 = Rx^2 + Rz^2 ，同样：<br>Ryz^2 = Ry^2 + Rz^2<br>同时注意：<br>R^2 = Rxz^2 + Ry^2 ，这个公式可以 公式1和上面的公式推导出来，也可由R和Ryz所组成的直角三角形推导出来<br>R ^ 2 = Ryz ^ 2 + RX ^ 2<br>在这篇文章中我们不会用到这些公式，但知道模型中的那些数值间的关系有助于理解。<br>相反，我们按如下方法定义Z轴和Rxz、Ryz向量所成的夹角：<br>AXZ - Rxz（矢量R在XZ平面的投影）和Z轴所成的夹角<br>AYZ - Ryz（矢量R在YZ平面的投影）和Z轴所成夹角<br>现在我们离陀螺仪要测量的东西又近了一步。陀螺仪测量上面定义的角度的变化率。换句话说，它会输出一个与上面这些角度变化率线性相关的值。为了解释这一点，我们先假设在t0时刻，我们已测得绕Y轴旋转的角度（也就是Axz），定义为Axz0，之后在t1时刻我们再次测量这个角度，得到Axz1。角度变化率按下面方法计算：<br>RateAxz = (Axz1 – Axz0) / (t1 – t0).<br>如果用度来表示角度，秒来表示时间，那这个值的单位就是 度/秒。这就是陀螺仪检测的东西。<br>在实际运用中，陀螺仪一般都不会直接给你一个单位为度/秒的值（除非它是个特殊的数字陀螺仪）。就像加速度计一样，你会得到一个ADC值并且要用类似 公式2的式子将其转换成单位为 度/秒的值。让我们来介绍陀螺仪输出值转换中的ADC部分（假设使用10位ADC模块，如果是8位ADC，用1023代替255，如果是12为ADC用4095代替1023）。<br>RateAxz = (AdcGyroXZ * Vref / 1023 – VzeroRate) / Sensitivity <strong>公式3</strong><br>RateAyz = (AdcGyroYZ * Vref / 1023 – VzeroRate) / Sensitivity<br>AdcGyroXZ，AdcGyroYZ - 这两个值由ADC读取，它们分别代表矢量R的投影在XZ和YZ平面内里的转角，也可等价的说，旋转可分解为单独绕Y和X轴的运动。<br>Vref – ADC的参考电压，上例中我们使用3.3V<br>VzeroRate – 是零变化率电压，换句话说它是陀螺仪不受任何转动影响时的输出值，对 <a href="http://gadgetgangster.com/find-a-project/56?projectnum=213">Acc Gyro</a>板来说，可以认为是1.23V（此值通常可以在说明书中找到——但千万别相信这个值，因为大多数的陀螺仪在焊接后会有一定的偏差，所以可以使用电压计测量每个通道的输出值，通常这个值在焊接后就不会改变，如果有跳动，在设备使用前写一个校准程序对其进行测量，用户应当在设备启动的时候保持设备静止以进行校准）。<br>Sensitivity –陀螺仪的灵敏度，单位mV/(deg/s)，通常写作mV/deg/s,它的意思就是如果旋转速度增加1°/s,陀螺仪的输出就会增加多少mV。 <a href="http://gadgetgangster.com/find-a-project/56?projectnum=213">Acc_Gyro</a>板的灵敏度值是2mV/deg/s或0.002V/deg/s<br>让我们举个例子，假设我们的ADC模块返回以下值：<br>AdcGyroXZ = 571<br>AdcGyroXZ = 323<br>用上面的公式，在代入 <a href="http://gadgetgangster.com/find-a-project/56?projectnum=213">Acc Gyro</a>板的参数，可得：<br>RateAxz = (571 * 3.3V / 1023 – 1.23V) / ( 0.002V/deg/s) =~ 306 deg/s<br>RateAyz = (323 * 3.3V / 1023 – 1.23V) / ( 0.002V/deg/s) =~ -94 deg/s<br>换句话说设备绕Y轴（也可以说在XZ平面内）以306°/s速度和绕X轴（或者说YZ平面内）以-94°/s的速度旋转。请注意，负号表示该设备朝着反方向旋转。按照惯例，一个方向的旋转是正值。一份好的陀螺仪说明书会告诉你哪个方向是正的，否则你就要自己测试出哪个旋转方向会使得输出脚电压增加。最好使用示波器进行测试，因为一旦你停止了旋转，电压就会掉回零速率水平。如果你使用的是万用表，你得保持一定的旋转速度几秒钟并同时比较电压值和零速率电压值。如果值大于零速率电压值那说明这个旋转方向是正向。<br>第三部分 将它们综合起来。融合加速度计和陀螺仪的数据。<br>如果你在阅读这篇文章你可能已经有了或准备购买一个IMU设备，或者你准备用独立的加速度计和陀螺仪搭建一个。<br>注：具体的代码实现和算法测试，请阅读这篇文章：<br><a href="http://starlino.com/imu_kalman_arduino.html">http://starlino.com/imu_kalman_arduino.html</a></p><p>在使用整合了加速度计和陀螺仪的IMU设备时，首先要做的就是统一它们的坐标系。最简单的办法就是将加速度计作为参考坐标系。大多数的加速度计技术说明书都会指出对应于物理芯片或设备的XZY轴方向。例如，下面就是Acc Gyro板的说明书中给出的XYZ轴方向：<br><img src="http://image.geek-workshop.com/forum/201208/22/16390056u825bbb2j10x80.png" alt="9.png"></p><p>2012-8-22 16:39 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQyMXxmZDNmNmQ3MnwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ==&amp;nothumb=yes"><strong>下载附件</strong>(35.18 KB)</a></p><p>接下来的步骤是：<br>- 确定陀螺仪的输出对应到上述讨论的RateAxz，RateAyz值。<br>- 根据陀螺仪和加速度计的位置决定是否要反转输出值<br>不要设想陀螺仪陀的输出有XY，它会适应加速度计坐标系里的任何轴，尽管这个输出是IMU模块的一部分。最好的办法就是测试。<br>接下来的示例用来确定哪个陀螺仪的输出对应RateAxz。<br>- 首先将设备保持水平。加速度计的XY轴输出会是零加速度电压（ <a href="http://gadgetgangster.com/find-a-project/56?projectnum=213">Acc Gyro</a>板的值是1.65V）<br>- 接下来将设备绕Y轴旋转，换句话说就是将设备在XZ平面内旋转，所以X、Z的加速度输出值会变化而Y轴保持不变。<br>-当以匀速旋转设备的时候，注意陀螺仪的哪个通道输出值变化了，其他输出应该保持不变。<br>- 在陀螺仪绕Y轴旋转（在XZ平面内旋转）的时候输出值变化的就是AdcGyroXZ，用于计算RateAxz<br>-最后一步，确认旋转的方向是否和我们的模型对应，因为陀螺仪和加速度的位置关系，有时候你可能要把RateAxz值反向<br>-重复上面的测试，将设备绕Y轴旋转，这次查看加速度计的X轴输出（也就是AdcRx）。如果AdcRx增大（从水平位置开始旋转的第一个90°），那AdcGyroXZ应当减小。这是因为我们观察的是重力矢量，当设备朝一个方向旋转时矢量会朝相反的方向旋转（相对坐标系运动）。所以，如果你不想反转RateAxz，你可以在 <strong>公式3</strong>中引入正负号来解决这个问题：<br>RateAxz = InvertAxz * (AdcGyroXZ * Vref / 1023 – VzeroRate) / Sensitivity ,其中InvertAxz= 1 或-1<br>同样的方法可以用来测试RateAyz，将设备绕X轴旋转，你就能测出陀螺仪的哪个输出对应于RateAyz，以及它是否需要反转。一旦你确定了InvertAyz，你就能可以用下面的公式来计算RateAyz：<br>RateAyz = InvertAyz * (AdcGyroYZ * Vref / 1023 – VzeroRate) / Sensitivity<br>如果对Acc Gyro板进行这些测试，你会得到下面的这些结果：<br>- RateAxz的输出管脚是GX4，InvertAxz = 1<br>- RateAyz输出管脚是GY4，InvertAyz = 1<br>从现在开始我们认为你已经设置好了IMU模块并能计算出正确的Axr，Ayr，Azr值（在第一部分加速度计中定义）以及RateAyz，RateAyz（在第二部分陀螺仪中）。下一步，我们分析这些值之间的关系并得到更准确的设备和地平面之间的倾角。<br>你可能会问自己一个问题，如果加速度计已经告诉我们Axr，Ayr，Azr的倾角，为什么还要费事去得到陀螺仪的数据？答案很简单：加速度计的数据不是100%准确的。有几个原因，还记加速度计测量的是惯性力，这个力可以由重力引起（理想情况只受重力影响），当也可能由设备的加速度（运动）引起。因此，就算加速度计处于一个相对比较平稳的状态，它对一般的震动和机械噪声很敏感。这就是为什么大部分的IMU系统都需要陀螺仪来使加速度计的输出更平滑。但是怎么办到这点呢？陀螺仪不受噪声影响吗？<br>陀螺仪也会有噪声，但由于它检测的是旋转，因此对线性机械运动没那么敏感，不过陀螺仪有另外一种问题，比如漂移（当选择停止的时候电压不会回到零速率电压）。然而，通过计算加速度计和陀螺仪的平均值我们能得到一个相对更准确的当前设备的倾角值，这比单独使用加速度计更好。<br>接下来的步骤我会介绍一种算法，算法受卡尔曼滤波中的一些思想启发，但是它更简单并且更容易在嵌入式设备中实现。在此之前，让我们先看看我们需要算法计算什么值。所要算的就是重力矢量R=[Rx,Ry,Rz]，它可由其他值推导出来，如Axr，Ayr，Azr或者cosX，cosY，cosZ，由这些值我们能得到设备相对地平面的倾角值，这些关系我们在第一部分已经讨论过。有人可能会说-根据第一部分的 公式2我们不是已经得到Rx，Ry，Rz的值了吗？是的，但是记住，这些值只是由加速度计数据推导出来的，如果你直接将它们用于你的程序你会得到难以忍受的噪声。为了避免进一步的混乱，我们重新定义加速度计的测量值：<br>Racc – 是由加速度计测量到得惯性力矢量，它可分解为下面的分量（在XYZ轴上的投影）：<br>RxAcc = (AdcRx * Vref / 1023 – VzeroG) / Sensitivity<br>RyAcc = (AdcRy * Vref / 1023 – VzeroG) / Sensitivity<br>RzAcc = (AdcRz * Vref / 1023 – VzeroG) / Sensitivity<br>现在我们得到了一组只来自于加速度计ADC的值。我们把这组数据叫做“vector”，并使用下面的符号：<br>Racc = [RxAcc,RyAcc,RzAcc]<br>因为这些Racc的分量可由加速度计数据得到，我们可以把它当做算法的输入。<br>请注意Racc测量的是重力，如果你得到的矢量长度约等于1g那么你就是正确的：<br>|Racc| = SQRT(RxAcc^2 +RyAcc^2 + RzAcc^2),<br>但是请确定把矢量转换成下面的矢量非常重要：<br>Racc(normalized) = [RxAcc/|Racc| , RyAcc/|Racc| , RzAcc/|Racc|].<br>这可以确保标准化Racc始终是1。<br>接来下我们引进一个新的向量：<br>Rest = [RxEst,RyEst,RzEst]<br>这就是算法的输出值，它经过陀螺仪数据的修正和基于上一次估算的值。<br>这是算法所做的事：<br>-加速度计告诉我们：“你现在的位置是Racc”<br>我们回答：“谢谢，但让我确认一下”<br>-然后根据陀螺仪的数据和上一次的Rest值修正这个值并输出新的估算值Rest。<br>-我们认为Rest是当前设备姿态的“最佳值”。<br>让我们看看它是怎么实现的。<br>数列的开始，我们先认为加速度值正确并赋值：<br>Rest(0) = Racc(0)<br>Rest和Racc是向量，所以上面的式子可以用3个简单的式子代替，注意别重复了：<br>RxEst（0）= RxAcc（0）<br>RyEst（0）= RyAcc（0）<br>RzEst（0）= RzAcc（0）<br>接下来我们在每个等时间间隔T秒做一次测量，得到新的测量值，并定义为Racc（1），Racc（2），Racc（3）等等。同时，在每个时间间隔我们也计算出新的估算值Rest（1）,Rest（2），Rest（3），等等。<br>假设我们在第n步。我们有两列已知的值可以用：<br>Rest(n-1) – 前一个估算值，Rest(0) = Racc(0)<br>Racc(n) – 当前加速度计测量值<br>在计算Rest（n）前，我们先引进一个新的值，它可由陀螺仪和前一个估算值得到。<br>叫做Rgyro，同样它是个矢量并由3个分量组成：<br>Rgyro = [RxGyro,RyGyro,RzGyro]<br>我们分别计算这个矢量的分量，从RxGyro开始。<br><img src="http://image.geek-workshop.com/forum/201208/22/163901qa8wfgaj8z8ca8kk.png" alt="10.png"></p><p>2012-8-22 16:39 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQyMnwxZDk2MjFlNXwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ==&amp;nothumb=yes"><strong>下载附件</strong>(12.55 KB)</a></p><p>首先观察陀螺仪模型中下面的关系，根据由Rz和Rxz组成的直角三角形我们能推出：<br>tan(Axz) = Rx/Rz =&gt; Axz = atan2(Rx,Rz)<br>你可能从未用过atan2这个函数，它和atan类似，但atan返回值范围是（-PI/2,PI/2），atan2返回值范围是（-PI，PI），并且他有两个参数。它能将Rx，Rz值转换成360°（-PI，PI）内的角度。更多信息请阅读 <a href="http://en.wikipedia.org/wiki/Atan2">atan2</a>.<br>所以，知道了RxEst（n-1）和RzEst（n-1）我们发现：<br>Axz(n-1) = atan2( RxEst(n-1) , RzEst(n-1) ).<br>记住，陀螺仪测量的是Axz角度变化率，因此，我们可以按如下方法估算新的角度Axz（n）：<br>Axz(n) = Axz(n-1) + RateAxz(n) * T<br>请记住，RateAxz可由陀螺仪ADC读取得到。通过使用平均转速可由得到一个更准确的公式：<br>RateAxzAvg =（RateAxz（N）+ RateAxz（N-1））/ 2<br>Axz(n) = Axz(n-1) + RateAxzAvg * T<br>同理可得：<br>Ayz(n) = Ayz(n-1) + RateAyz(n) * T<br>好了，现在我们有了Axz（n），Ayz（n）。现在我们如何推导出RxGyro/RyGyro?根据 公式1我们可以把Rgyro长度写成下式：<br>| Rgyro | = SQRT（RxGyro ^ 2 + RyGyro ^ 2 + RzGyro ^ 2）<br>同时，因为我们已经将Racc标准化，我们可以认为它的长度是1并且旋转后保持不变，所以写成下面的方式相对比较安全：<br>| Rgyro | = 1<br>我们暂时采用更短的符号进行下面的计算：<br>x =RxGyro , y=RyGyro, z=RzGyro<br>根据上面的关系可得：<br>x = x / 1 = x / SQRT(x^2+y^2+z^2)<br>分子分母同除以SQRT（X ^ 2 + Z ^ 2）<br>x = ( x / SQRT(x^2 + z^2) ) / SQRT( (x^2 + y^2 + z^2) / (x^2 + z^2) )<br>注意x / SQRT(x^2 + z^2) = sin(Axz), 所以:<br>x = sin(Axz) / SQRT (1 + y^2 / (x^2 + z^2) )<br>将SQRT内部分式的分子分母同乘以z^2<br>x = sin(Axz) / SQRT (1 + y^2 * z ^2 / (z^2 * (x^2 + z^2)) )<br><strong>注意 z / SQRT(x^2 + z^2) = cos(Axz)， y / z = tan(Ayz), 所以最后可得:</strong><br>x = sin(Axz) / SQRT (1 + cos(Axz)^2 * tan(Ayz)^2 )<br>替换成原来的符号可得：<br>RxGyro = sin(Axz(n)) / SQRT (1 + cos(Axz(n))^2 * tan(Ayz(n))^2 )<br>同理可得：<br>RyGyro = sin(Ayz(n)) / SQRT (1 + cos(Ayz(n))^2 * tan(Axz(n))^2 )<br>提示：这个公式还可以更进一步简化。分式两边同除以sin（axz（你））可得：<br>RxGyro = 1 / SQRT (1/ sin(Axz(n))^2 + cos(Axz(n))^2 / sin(Axz(n))^2 * tan(Ayz(n))^2 )<br>RxGyro = 1 / SQRT (1/ sin(Axz(n))^2 + cot(Axz(n))^2 * sin(Ayz(n))^2 / cos(Ayz(n))^2 )<br>现在加减  cos(Axz(n))^2/sin(Axz(n))^2  = cot(Axz(n))^2<br>RxGyro = 1 / SQRT (1/ sin(Axz(n))^2 - cos(Axz(n))^2/sin(Axz(n))^2  + cot(Axz(n))^2 * sin(Ayz(n))^2 / cos(Ayz(n))^2 + cot(Axz(n))^2 )<br>综合条件1、2和3、4可得：<br>RxGyro = 1 / SQRT (1 +  cot(Axz(n))^2 * sec(Ayz(n))^2 ),   其中 cot(x) = 1 / tan(x) ， sec(x) = 1 / cos(x)<br>这个公式只用了2个三角函数并且计算量更低。如果你有Mathematica程序，通过使用 FullSimplify [Sin[A]^2/ ( 1 + Cos[A]^2 * Tan[B]^2)]你可以验证这个公式。</p><p>现在我们发现：<br>RzGyro = Sign(RzGyro)*SQRT(1 – RxGyro^2 – RyGyro^2).<br>其中，当 RzGyro&gt;=0时，Sign(RzGyro) = 1 , 当 RzGyro&lt;0时，Sign(RzGyro) = -1 。<br>一个简单的估算方法：<br>Sign(RzGyro) = Sign(RzEst(n-1))<br>在实际应用中，当心RzEst（n-1）趋近于0。这时候你可以跳过整个陀螺仪阶段并赋值：Rgyro=Rest（n-1）。Rz可以用作计算Axz和Ayz倾角的参考，当它趋近于0时，它可能会溢出并引发不好的后果。这时你会得到很大的浮点数据，并且tan()/atan()函数得到的结果会缺乏精度。</p><p>现在我们回顾一下已经得到的结果，我们在算法中的第n步，并计算出了下面的值：<br>Racc – 加速度计读取的当前值<br>Rgyro –根据Rest(-1)和当前陀螺仪读取值所得<br>我们根据哪个值来更新Rest（n）呢？你可能已经猜到，两者都采用。我们会用一个加权平均值，得：<br>Rest(n) = (Racc * w1 + Rgyro * w2 ) / (w1 + w2)<br>分子分母同除以w1，公式可简化成：<br>Rest(n) = (Racc * w1/w1 + Rgyro * w2/w1 ) / (w1/w1 + w2/w1)<br>令w2=w1=wGyro，可得：<br>Rest(n) = (Racc + Rgyro * wGyro ) / (1 + wGyro)<br>在上面的公式中，wGyro表示我们对加速度计和陀螺仪的相信程度。这个值可以通过测试确定，根据经验值5-20之间会得到一个很好的结果。<br>此算法和卡尔曼滤波最主要的差别是它的权重是相对固定的，而卡尔曼滤波中的权重会随着加速度计读取的噪声而改变。卡尔曼滤波注重给你一个“最好”的理论结果，而此算法给你的是实际项目中“够用”的结果。你可以实现一个算法，它能根据测量的噪声而改变wGyro值，但对大部分应用来说固定的权重也能工作的很好。<br>现在得到最新的估算值还差一步：<br>RxEst(n) = (RxAcc + RxGyro * wGyro ) / (1 + wGyro)<br>RyEst(n) = (RyAcc + RyGyro * wGyro ) / (1 + wGyro)<br>RzEst(n) = (RzAcc + RzGyro * wGyro ) / (1 + wGyro)<br>现在，再次标准化矢量：<br>R = SQRT(RxEst(n) ^2 + RyEst(n)^2 + RzEst(n)^2 )<br>RxEst(n) = RxEst(n)/R<br>RyEst(n) = RyEst(n)/R<br>RzEst(n) = RzEst(n)/R<br>现在，可以再次进行下一轮循环了。<br><strong>注：</strong>关于此算法的具体实现和测试，请阅读这篇文章：<br><a href="http://starlino.com/imu_kalman_arduino.html">http://starlino.com/imu_kalman_arduino.html</a></p><p>加速度计和陀螺仪IMU融合的其他资源：<br><a href="http://www.mikroquad.com/pub/Research/ComplementaryFilter/filter.pdf">http://www.mikroquad.com/pub/Res … ryFilter/filter.pdf</a></p><p><a href="http://stackoverflow.com/questions/1586658/combine-gyroscope-and-accelerometer-data">http://stackoverflow.com/questio … -accelerometer-data</a><br><a href="http://www.dimensionengineering.com/accelerometers.htm">http://www.dimensionengineering.com/accelerometers.htm</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>陀螺仪--九轴</title>
      <link href="/2021/07/27/tuo-luo-yi-2/"/>
      <url>/2021/07/27/tuo-luo-yi-2/</url>
      
        <content type="html"><![CDATA[<center>   </center><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>传感器的调试过程，一般根据原厂提供demo代码，调试数据接口，将数据流打通即可，在VR中，当带上头显设备，运行应用时，出现漂移、延迟、不回归问题，往往束手无策，解决这些小问题，往往占用很多的时间，希望通过自己整理的知识，明确调试的方向，提高调试效率，达到好的调试效果。自己近几年在Android平台上导入过多种9轴传感器，做过一些sensor内部分享，而且近半年来从事VR开发工作，VR对9轴传感器要求比手机、平板严格更多，遇到的问题也更多，在开发过程中不断学习和思考，与传感器原厂RD沟通和学习。</p><h1 id="9轴传感器"><a href="#9轴传感器" class="headerlink" title="9轴传感器"></a>9轴传感器</h1><p>9轴传感器包括3轴加速度计、3轴陀螺仪、3轴磁力计，在实际应用中，需要把这些数据需要经过融合算法后，才能够被应用程序使用，下面对每种传感器功能、原理以及融合算法进行介绍。</p><h2 id="加速度计"><a href="#加速度计" class="headerlink" title="加速度计"></a>加速度计</h2><p>人们常说的G-sensor，用来检测物理在X、Y、Z轴上的重力加速度，单位:m/s^2.<br>以手机为例，X、Y、Z轴如下图所示（右手坐标系）：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101251281" alt="这里写图片描述"><br>当手机平放在桌面时，Z轴指向天空，这时候X、Y轴的数值接近为0，Z轴的重力加速度约为9.81m/s^2，将手机翻转后，即屏幕面朝向桌面，此时的Z轴重力加速度约为-9.81m/s^2。<br>X、Y轴指向天空时，与上面Z轴同理，有兴趣的可以在手机上安装一个”sensor_list.apk”来抓取这些数据。</p><ul><li>原理<br><a href="http://www.starlino.com/imu_guide.html">这里是英文介绍</a>，中文版本如下：<br>当我们在想象一个加速度计的时候我们可以把它想作一个圆球在一个方盒子中。你可能会把它想作一个饼干或者甜圈，但我就把它当做一个球好了：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101306719" alt="这里写图片描述"><br>我们假定这个盒子不在重力场中或者其他任何会影响球的位置的场中，球处于盒子的正中央。你可以想象盒子在外太空中，远离任何天体，如果很难想象，那就当做盒子在航天飞机中，一切东西都处于无重力状态。在上面的图中你可以看到我们给每个轴分配了一对墙（我们移除了Y+以此来观察里面的情况）。设想每面墙都能感测压力。如果我们突然把盒子向左移动（加速度为1g=9.8m/s^2），那么球会撞上X-墙。然后我们检测球撞击墙面产生的压力，根据F=ma，计算出X轴加速度输出值为-1g。<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101317203" alt="这里写图片描述"><br>请注意加速度计检测到的力方向与它本身加速度的方向是相反的。这种力量通常被称为惯性力或假想力 。在这个模型中你应该明白加速度计是通过间接测量力对一个墙面的作用来测量加速度的，在实际应用中，可能通过弹簧等装置来测量力。这个力可以是加速度引起的，但在下面的例子中，我们会发现它不一定是加速度引起的。<br>如果我们把模型放在地球上，球会落在Z-墙面上并对其施加一个1g的力，见下图：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101342743" alt="这里写图片描述"><br>在这种情况下盒子没有移动但我们任然读取到Z轴有-1g的值。球在墙壁上施加的压力是由引力造成的。在理论上，它可以是不同类型的力量，例如，你可以想象我们的球是铁质的，将一个磁铁放在盒子旁边那球就会撞上另一面墙。引用这个例子只是为了说明加速度计的本质是检测力而非加速度。只是加速度所引起的惯性力正好能被加速度计的检测装置所捕获。<br>虽然这个模型并非一个MEMS传感器的真实构造，但它用来解决与加速度计相关的问题相当有效。实际上有些类似传感器中有金属小球，它们称作倾角开关，但是它们的功能更弱，只能检测设备是否在一定程度内倾斜，却不能得到倾斜的程度。<br>到目前为止，我们已经分析了单轴的加速度计输出，这是使用单轴加速度计所能得到的。三轴加速度计的真正价值在于它们能够检测全部三个轴的惯性力。让我们回到盒子模型，并将盒子向右旋转45度。现在球会与两个面接触：Z-和X-，见下图：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101354118" alt="这里写图片描述"><br>0.71g这个值是不是任意的，它们实际上是1/2的平方根的近似值。我们介绍加速度计的下一个模型时这一点会更清楚。<br>在上一个模型中我们引入了重力并旋转了盒子。在最后的两个例子中我们分析了盒子在两种情况下的输出值，力矢量保持不变。虽然这有助于理解加速度计是怎么和外部力相互作用的，但如果我们将坐标系换为加速度的三个轴并想象矢量力在周围旋转，这会更方便计算。<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101540369" alt="这里写图片描述"><br>请看看在上面的模型，我保留了轴的颜色，以便你的思维能更好的从上一个模型转到新的模型中。想象新模型中每个轴都分别垂直于原模型中各自的墙面。矢量R是加速度计所检测的矢量（它可能是重力或上面例子中惯性力的合成）。RX，RY，RZ是矢量R在X，Y，Z上的投影。请注意下列关系：<br>R ^ 2 = RX ^ 2 + RY ^ 2 + RZ ^ 2（公式1）<br>此公式等价于三维空间勾股定理。<br>还记得我刚才说的1/2的平方根0.71不是个随机值吧。如果你把它们代回上式，回顾一下重力加速度是1g，那我们就能验证：<br>1 ^ 2 =（SQRT（1/2））^ 2 + 0 ^ 2 +（SQRT（1/2））^ 2<br>在公式1中简单的取代： R=1, Rx = -SQRT(1/2), Ry = 0 , Rz = -SQRT(1/2)<br>经过一大段的理论序言后，我们和实际的加速度计很靠近了。RX，RY，RZ值是实际中加速度计输出的线性相关值，你可以用它们进行各种计算。<br>在我们运用它之前我们先讨论一点获取加速度计数据的方法。大多数加速度计可归为两类：数字和模拟。数字加速度计可通过I2C，SPI或USART方式获取信息，而模拟加速度计的输出是一个在预定范围内的电压值，你需要用ADC（模拟量转数字量）模块将其转换为数字值。我将不会详细介绍ADC是怎么工作的，部分原因是这是个很广的话题，另一个原因是不同平台的ADC都会有差别。有些MCU具有内置ADC模块，而有些则需要外部电路进行ADC转换。不管使用什么类型的ADC模块，你都会得到一个在一定范围内的数值。例如一个10位ADC模块的输出值范围在0 .. 1023间，请注意，1023 = 2 ^ 10 -1。一个12位ADC模块的输出值范围在0 .. 4095内，注意，4095 = 2 ^ 12-1。<br>我们继续，先考虑下一个简单的例子，假设我们从10位ADC模块得到了以下的三个轴的数据：<br>AdcRx = 586<br>AdcRy = 630<br>AdcRz = 561<br>每个ADC模块都有一个参考电压，假设在我们的例子中，它是3.3V。要将一个10位的ADC值转成电压值，我们使用下列公式：<br>VoltsRx = AdcRx * VREF / 1023<br>小注：8位ADC的最大值是255 = 2 ^ 8 -1，12位ADC最大值是4095 = 2 ^ 12 -1。<br>将3个轴的值代入上式，得到：<br>VoltsRx = 586 * 3.3 / 1023 =～1.89V（结果取两位小数）<br>VoltsRy = 630 * 3.3 / 1023 =～2.03V<br>VoltsRz = 561 * 3.3 / 1023 =～1.81V<br>每个加速度计都有一个零加速度的电压值，你可以在它的说明书中找到，这个电压值对应于加速度为0g。通过计算相对0g电压的偏移量我们可以得到一个有符号的电压值。比方说，0g电压值 VzeroG= 1.65V，通过下面的方式可以得到相对0g电压的偏移量:<br>DeltaVoltsRx = 1.89V - 1.65V = 0.24V<br>DeltaVoltsRy = 2.03V - 1.65V = 0.38V<br>DeltaVoltsRz = 1.81V - 1.65V = 0.16V<br>现在我们得到了加速度计的电压值，但它的单位还不是g（9.8m/s^2），最后的转换，我们还需要引入加速度计的灵敏度（Sensitivity），单位通常是 mV/g。比方说，加速度计的灵敏度 Sensitivity= 478.5mV / g = 0.4785V /g。灵敏度值可以在加速度计说明书中找到。要获得最后的单位为g的加速度，我们使用下列公式计算：<br>RX = DeltaVoltsRx /Sensitivity<br>RX = 0.24V / 0.4785V / G =～0.5g<br>RY = 0.38V / 0.4785V / G =～0.79g<br>RZ = 0.16V / 0.4785V / G =～0.33g<br>当然，我们可以把所有的步骤全部放在一个式子里，但我想通过介绍每一个步骤以便让你了解怎么读取一个ADC值并将其转换为单位为g的矢量力的分量。<br>Rx = (AdcRx * Vref / 1023 – VzeroG) / Sensitivity (公式2)<br>Ry = (AdcRy * Vref / 1023 – VzeroG) / Sensitivity<br>Rz = (AdcRz * Vref / 1023 – VzeroG) / Sensitivity<br>现在我们得到了惯性力矢量的三个分量，如果设备除了重力外不受任何外力影响，那我们就可以认为这个方向就是重力矢量的方向。如果你想计算设备相对于地面的倾角，可以计算这个矢量和Z轴之间的夹角。如果你对每个轴的倾角都感兴趣，你可以把这个结果分为两个分量：X轴、Y轴倾角，这可以通过计算重力矢量和X、Y轴的夹角得到。计算这些角度比你想象的简单，现在我们已经算出了Rx，Ry，Rz的值，让我们回到我们的上一个加速度模型，再加一些标注上去：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101555463" alt="这里写图片描述"><br>我们感兴趣的角度是向量R和X，Y，Z轴之间的夹角，那就令这些角度为Axr，Ayr，Azr。观察由R和Rx组成的直角三角形：<br>cos(Axr) = Rx / R , 类似的：<br>cos(Ayr) = Ry / R<br>cos(Azr) = Rz / R<br>从公式1我们可以推导出 R = SQRT( Rx^2 + Ry^2 + Rz^2)<br>通过arccos()函数（cos()的反函数）我们可以计算出所需的角度：<br>Axr = arccos(Rx/R)<br>Ayr = arccos(Ry/R)<br>Azr = arccos(Rz/R)<br>我们花了大段的篇幅来解释加速度计模型，最后所要的只是以上这几个公式。根据你的应用场合，你可能会用到我们推导出来的几个过渡公式。我们接下来要介绍陀螺仪模块，并向大家介绍怎么融合加速度计和陀螺仪的数据以得到更精确的倾角值。<br>但在此之前，我们再介绍几个很常用的公式：<br>cosX = cos(Axr) = Rx / R<br>cosY = cos(Ayr) = Ry / R<br>cosZ = cos(Azr) = Rz / R<br>这三个公式通常称作方向余弦 ，它主要表达了单位向量（长度为1的向量）和R向量具有相同的方向。你可以很容易地验证：<br>SQRT（cosX ^ 2 + COSY ^ 2 + cosZ ^ 2）= 1<br>这是个很好的性质，因为它避免了我们一直检测R向量的模（长度）。通常如果我们只是对惯性力的方向感兴趣，那标准化模长以简化其他计算是个明智的选择。</li><li>常用加速度传感器<br>加速度计种类繁多，MMA、LSM、MPU、BMA等系列，如：MMA7460、MMA8452、MPU6050（A+G）、MPU6800(A+G)、LSM6DSL(A+G)、IMC20603(A+G)、MPU9150（A+G+M）</li><li>使用场景<br>加速度计通过一定的算法，就可以做成我们常用的功能，如：计步器、拍照防抖、GPS补偿、跌落保护、图像旋转、游戏控制器等。</li></ul><h2 id="陀螺仪"><a href="#陀螺仪" class="headerlink" title="陀螺仪"></a>陀螺仪</h2><p>通常称为Gyro-sensor，用来测量在X、Y、Z轴上的旋转速率，单位:rad/s。<br>以手机为例，将手机平放桌面，屏幕朝上，以逆时针方向旋转手机，获得到的是Z轴的加速度值。<br>有兴趣可以安装“sensor_list.apk”工具，来查看X、Y、Z轴的加速度值。</p><ul><li>原理<br>对于陀螺仪我们将不会像加速度计一样介绍它的等价盒子模型，而是直接跳到加速度计的第二个模型，通过这个模型我们会向大家介绍陀螺仪是怎么工作的。<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101615317" alt="这里写图片描述"><br>陀螺仪的每个通道检测一个轴的旋转。例如，一个2轴陀螺仪检测绕X和Y轴的旋转。为了用数字来表达这些旋转，我们先引进一些符号。首先我们定义：<br>Rxz – 惯性力矢量R在XZ平面上的投影<br>Ryz – 惯性力矢量R在YZ平面的上投影<br>在由Rxz和Rz组成的直角三角形中，运用勾股定理可得：<br>Rxz^2 = Rx^2 + Rz^2 ，同样：<br>Ryz^2 = Ry^2 + Rz^2<br>同时注意：<br>R^2 = Rxz^2 + Ry^2 ，这个公式可以公式1和上面的公式推导出来，也可由R和Ryz所组成的直角三角形推导出来<br>R ^ 2 = Ryz ^ 2 + RX ^ 2<br>在这篇文章中我们不会用到这些公式，但知道模型中的那些数值间的关系有助于理解。<br>相反，我们按如下方法定义Z轴和Rxz、Ryz向量所成的夹角：<br>AXZ - Rxz（矢量R在XZ平面的投影）和Z轴所成的夹角<br>AYZ - Ryz（矢量R在YZ平面的投影）和Z轴所成夹角<br>现在我们离陀螺仪要测量的东西又近了一步。陀螺仪测量上面定义的角度的变化率。换句话说，它会输出一个与上面这些角度变化率线性相关的值。为了解释这一点，我们先假设在t0时刻，我们已测得绕Y轴旋转的角度（也就是Axz），定义为Axz0，之后在t1时刻我们再次测量这个角度，得到Axz1。角度变化率按下面方法计算：<br>RateAxz = (Axz1 – Axz0) / (t1 – t0).<br>如果用度来表示角度，秒来表示时间，那这个值的单位就是 度/秒。这就是陀螺仪检测的东西。<br>在实际运用中，陀螺仪一般都不会直接给你一个单位为度/秒的值（除非它是个特殊的数字陀螺仪）。就像加速度计一样，你会得到一个ADC值并且要用类似公式2的式子将其转换成单位为 度/秒的值。让我们来介绍陀螺仪输出值转换中的ADC部分（假设使用10位ADC模块，如果是8位ADC，用1023代替255，如果是12为ADC用4095代替1023）。<br>RateAxz = (AdcGyroXZ * Vref / 1023 – VzeroRate) / Sensitivity 公式3<br>RateAyz = (AdcGyroYZ * Vref / 1023 – VzeroRate) / Sensitivity<br>AdcGyroXZ，AdcGyroYZ - 这两个值由ADC读取，它们分别代表矢量R的投影在XZ和YZ平面内里的转角，也可等价的说，旋转可分解为单独绕Y和X轴的运动。<br>Vref – ADC的参考电压，上例中我们使用3.3V<br>VzeroRate – 是零变化率电压，换句话说它是陀螺仪不受任何转动影响时的输出值，对调试板来说，可以认为是1.23V（此值通常可以在说明书中找到——但千万别相信这个值，因为大多数的陀螺仪在焊接后会有一定的偏差，所以可以使用电压计测量每个通道的输出值，通常这个值在焊接后就不会改变，如果有跳动，在设备使用前写一个校准程序对其进行测量，用户应当在设备启动的时候保持设备静止以进行校准）。<br>Sensitivity –陀螺仪的灵敏度，单位mV/(deg/s)，通常写作mV/deg/s,它的意思就是如果旋转速度增加1°/s,陀螺仪的输出就会增加多少mV。调试板的灵敏度值是2mV/deg/s或0.002V/deg/s<br>让我们举个例子，假设我们的ADC模块返回以下值：<br>AdcGyroXZ = 571<br>AdcGyroXZ = 323<br>用上面的公式，在代入调试板的参数，可得：<br>RateAxz = (571 * 3.3V / 1023 – 1.23V) / ( 0.002V/deg/s) =~ 306 deg/s<br>RateAyz = (323 * 3.3V / 1023 – 1.23V) / ( 0.002V/deg/s) =~ -94 deg/s<br>换句话说设备绕Y轴（也可以说在XZ平面内）以306°/s速度和绕X轴（或者说YZ平面内）以-94°/s的速度旋转。请注意，负号表示该设备朝着反方向旋转。按照惯例，一个方向的旋转是正值。一份好的陀螺仪说明书会告诉你哪个方向是正的，否则你就要自己测试出哪个旋转方向会使得输出脚电压增加。最好使用示波器进行测试，因为一旦你停止了旋转，电压就会掉回零速率水平。如果你使用的是万用表，你得保持一定的旋转速度几秒钟并同时比较电压值和零速率电压值。如果值大于零速率电压值那说明这个旋转方向是正向。</li><li>常用陀螺仪传感器<br>目前市面上较多的都是二合一模块（加速度+陀螺仪），如：MPU6050（A+G）、MPU6800(A+G)、LSM6DSL(A+G)、IMC20603(A+G)、MPU9150（A+G+M）。</li><li>使用场景<br>航海、航空、游戏、拍照防抖、控制等。</li></ul><h2 id="磁力计"><a href="#磁力计" class="headerlink" title="磁力计"></a>磁力计</h2><ul><li>原理<br><a href="http://www.stmcu.org/article/id-261634">ST对电子罗盘的详细介绍</a>。</li><li>常用磁力计传感器<br>AKM8963（很经典的一颗，目前停产）、AKM09911、AKM09915、LIS3MDL，磁传感器目前还是AKM一家独大，其他家的性能差距还是比较明显的。</li><li>使用场景<br>主要是指南针，在应用中对6轴数据进行偏航校正。</li></ul><h2 id="融合算法"><a href="#融合算法" class="headerlink" title="融合算法"></a>融合算法</h2><p>想想我们为什么需要9轴的数据来确认物体的姿态呢？有了加速度计数据可以确定物体摆放的状态，例如有加速度计的手机，可以根据手机的横竖屏状态来触发屏幕相应的旋转，但对于物体的翻转、旋转的快慢无从得知，检测不到物体的瞬时状态，这时候就需要加入陀螺仪，通过加速度和陀螺仪的积分运算（这部分计算可以看下面Oculus的融合算法说明），可以获得到物体的运动状态，积分运算与真实状态存在微小差值，短时间内影响很小，但这个误差会一直累积，随着使用时间增加，就会有明显的偏离，6轴的设备，在转动360度后，图像并不能回到原点，就是这个原因，就像人迷路后找不着北一样，这时候就需要一个准确的方向，因此引入磁力计，来找到正确的方向进行校正。融合算法是通过这9轴的数据来计算出物体正确的姿态。目前9轴融合算法包括卡尔曼滤波、粒子滤波、互补滤波算法，对于开发者而言，所有的融合算法本基本都是丢入9轴传感器的数据和时间戳，然后获取到融合算法输出的四元素，应用所需的就是这组四元素，目前我这里接触到的算法包括：</p><ul><li>Oculus融合算法<br>目前卡尔曼滤波和例子滤波都存在一定的局限性，比较好的选择是互补滤波算法，之前翻译过oculus传感器算法<a href="http://blog.csdn.net/dabenxiong666/article/details/52957370">Oculus:”sensor fusion:Keeping It Simple”</a><br>它的代码实现在openHMD中ofusion_update接口中，有兴趣可以下载openHMD来研究一下。<br><strong>注</strong>：openHMD中的oculus融合算法（已更新于2016.12.01），我们曾经把它应用到项目当中，后来发现这部分算法不包含航向偏移校正。</li><li>互补滤波算法<br>MIT上发表的互补滤波算法的原理和基于Android平台的算法实现，很完整的算法，oculus的算法也是基于互补滤波的，个人认为目前入门融合算法最好的选择<a href="https://www.codeproject.com/articles/729759/android-sensor-fusion-tutorial">MIT互补滤波算法</a>。</li><li>AHRS<br>在四轴飞行器论坛上，比较多人使用AHRS开源融合算法,<a href="https://github.com/TobiasSimon/MadgwickTests/blob/master/MadgwickAHRS.c">这里获取源码</a><br>如果是爱好者，使用开源的算法能满足大多数的需求，另外可以看一下AMO论坛上的这个讨论<a href="http://www.amobbs.com/thread-5492189-1-1.html">捷联惯导算法心得</a>。<br>产品化还是依赖原厂提供的算法。</li></ul><h2 id="传感器调试"><a href="#传感器调试" class="headerlink" title="传感器调试"></a>传感器调试</h2><p>这里不对特定平台（MCU、Android、Linux等），传感器通讯接口（I2C、SPI等）、数据传递子系统(input、IIO等)详细说明，这部分代码由各sensor厂家直接提供，这里主要说明一下调试基本流程和方法：</p><ul><li>通讯接口<br>传感器IC的通讯接口I2C或SPI，通讯接口能够读写正常即可。</li><li>寄存器配置<br>寄存器参数配置，一般原厂会提供，根据自己需求设置full scale(量程)、ODR（采样速率）、中断、休眠模式 即可。</li><li>坐标系转换<br>这3种传感器在实际应用中，都需要调整IC的坐标系与实际坐标系相匹配。IC的坐标系是固定的，参考规格书，这里以20602为例：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101725183" alt="这里写图片描述"><br>而实际应用当中，也有自己的坐标系，手机应用（右手坐标系）：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101733085" alt="这里写图片描述"><br>unity应用（左手坐标系）：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101748589" alt="这里写图片描述"><br>坐标系的匹配，一般通过驱动的旋转矩阵，来调整。这里需要注意，融合算法一般直接适配的是右手坐标系，而VR应用多数是基于unity引擎开发的，即采用左手坐标系，这里不能将IC的坐标系直接与左手坐标系做匹配，否则会有漂移！这个转换应用会有对应的API去做转换，将驱动坐标系与世界坐标系匹配。</li><li>硬件环境<br>另外传感器对于硬件有所要求，比如IC摆放不能靠近边缘，下方走线规范，附近几毫米内不允许有大电流，马达，软磁、硬磁干扰等等，这方面最好是把PCB给原厂审核，磁方面用他们专门的设备扫描磁力计周围的磁场环境是否正常。<br>基本理论搞清楚调试起来就会得心应手，这里提供一个<a href="http://download.csdn.net/detail/dabenxiong666/9718883?locationNum=4&amp;fps=1">Android平台调试sensor的文档</a>，其他平台类似。</li></ul><h2 id="9轴方案选择"><a href="#9轴方案选择" class="headerlink" title="9轴方案选择"></a>9轴方案选择</h2><p>上面主要对传感器的知识做了一些整理和归纳，下面是我们在做9轴方案选择的一些实验,目前选择市面上使用较多的两家（ST和Invensense）9轴方案进行评估、测试，均是用官方建议最优方案，即：<br>ST:LSM6DSL+LIS3MDL<br>Invensense: imc20603+akm09915<br>对比内容包括静态、动态对比以及结合应用体验来评估2种传感器方案，<a href="https://drive.google.com/open?id=0Bx5hCqFqKCggZHRRdV80ZXk0MWc">测试数据包和测试视频</a>。</p><ul><li><p>静态数据</p><p>放置30秒后，开始采集5分钟静态数据,3000~5000组数据（包括欧拉角、四元素、磁数据），数据见附件中的“静态数据”表格</p><ul><li>静态漂移：<br>根据四元素均方差数据计算，5分钟内ST与Invensense静态角度偏差均小于1度，此项2种方案相同。</li><li>Yaw角偏移：<br>Yaw均方差数值接近(ST为0.19，invensense为0.20)，YAW角偏移大概在1度左右，此项2种方案相同。</li></ul></li><li><p>动态数据</p><ul><li>回归测试：<br>放置到固定位置，任意角度运动1分钟，运动过程未超量程（即：运动中，加速度不超过4g，陀螺仪不超过2000dps），放回原位置，然后对比运动前后，看应用的画面是否与运动前一致。如”回归测试视频”所示，Invensense的画面能够基本回到原来的位置，ST的有明显偏移,这个视频对于2种sensor的优劣还是比较明显的。<br>此项Invensense优于ST。</li><li>磁数据测试<br>固定桌面，缓慢旋转2周，抓取3500个数据点，通过matlab作图。<br>Invensense磁数据图：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101802996" alt="这里写图片描述"><br>ST磁数据图：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101810965" alt="这里写图片描述"><br>说明:测试时，平放板子到桌面，然后缓慢旋转2周（绕Z轴旋转），上图x/y轴分别未经算法处理的X、Y的磁数据，因为ST和Invensense抓取到的磁数据放大倍数不同所以看起来数据量级不一样，但不影响判断，数据的放大倍数只影响圆的半径大小。磁数据是用来对航向（yaw）校正的，关系到9轴数据的准确性。从图上可以看出invensense的磁数据基本落在一个圆内，ST的磁数据在圆内、圆外都有很多离散的点，影响9周数据的准确性。<br>此项Invensense优于ST。</li></ul></li><li><p>应用体验</p><ul><li>收敛速度<br>结合应用测试，Invensense在运动后1秒内收敛完成，而ST的需要2-3秒的校正时间后，才能收敛完。<br>此项Invensense优于ST.</li></ul></li></ul><p>结论：静态数据2种方案相差不大，5分钟内偏移角度都在1度以内，且有磁力计可以纠正航向问题，都能满足需要，但在动态数据上，Invense明显优于ST，在实际体验中Invense收敛快，能回归，所以9轴方案Invensense优于ST。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://developer3.oculus.com/blog/sensor-fusion-keeping-it-simple/">oculars sensor doc</a><br><a href="http://www.starlino.com/imu_guide.html">starlino Imu introduce</a><br><a href="https://developer.android.com/guide/topics/sensors/sensors_overview.html">goole sensor introduce</a><br><a href="http://www.geek-workshop.com/thread-1695-1-1.html">geek-workshop</a><br><a href="http://www.amobbs.com/thread-5492189-1-1.html">捷联惯导算法心得</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>陀螺仪--mpu6050</title>
      <link href="/2021/07/27/tuo-luo-yi/"/>
      <url>/2021/07/27/tuo-luo-yi/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="Ⅰ-陀螺仪"><a href="#Ⅰ-陀螺仪" class="headerlink" title="Ⅰ.陀螺仪"></a>Ⅰ.陀螺仪</h1><p>陀螺仪是用高速回转体的动量矩敏感壳体相对惯性空间绕正交于自转轴的一个或二个轴的角运动检测装置。利用其他原理制成的角运动检测装置起同样功能的也称陀螺仪。<br>从力学的观点近似的分析陀螺的运动时，可以把它看成是一个刚体，刚体上有一个万向支点，而陀螺可以绕着这个支点作三个自由度的转动，所以陀螺的运动是属于刚体绕一个定点的转动运动。更确切地说，一个绕对称铀高速旋转的飞轮转子叫陀螺。将陀螺安装在框架装置上，使陀螺的自转轴有角转动的自由度，这种装置的总体叫做陀螺仪。<br>陀螺仪的原理就是，一个旋转物体的旋转轴所指的方向在不受外力影响时，是不会改变的。人们根据这个道理，用它来保持方向，制造出来的东西就叫陀螺仪。我们骑自行车其实也是利用了这个原理。轮子转得越快越不容易倒，因为车轴有一股保持水平的力量。陀螺仪在工作时要给它一个力，使它快速旋转起来，一般能达到每分钟几十万转，可以工作很长时间。然后用多种方法读取轴所指示的方向，并自动将数据信号传给控制系统。</p><h1 id="Ⅱ-MPU6050模块"><a href="#Ⅱ-MPU6050模块" class="headerlink" title="Ⅱ.MPU6050模块"></a>Ⅱ.MPU6050模块</h1><p>简介：<br>MPU6050内部整合了<strong>三轴MEMS陀螺仪</strong>、<strong>三轴MEMS加速度计</strong>以及一个可扩展的<strong>数字运动处理器DMP(Digital Motion Processor)<strong>，而且还可以连接一个第三方数字传感器(如磁力计)，这样的话，就可以通过IIC接口输出一个9轴信号(链接第三方数字传感器才可以输出九轴信号，否则只有六轴信号)。更加方便的是，有了DMP，可以结合InvenSense公司提供的运动处理资料库，实现姿态解算。通过自带的DMP，可以通过</strong>IIC接口</strong>输出9轴融合演算的数据，大大降低了运动处理运算对操作系统的负荷，同时也降低了开发难度。<em><strong>其实，简单一句话说，陀螺仪就是测角速度的，加速度传感器就是测角加速度的，二者数据通过算法就可以得到PITCH、YAW、ROLL角了。</strong></em></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20140401183456562" alt="右手笛卡尔坐标系"></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20140401183518578" alt="img"></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20140401183525562" alt="img"></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20140401183537890" alt="img"></p><p>特点：</p><ol><li>以数字形式输出 6 轴或 9 轴（需外接磁传感器）的旋转矩阵、四元数(quaternion)、欧拉角格式(Euler Angle forma)的融合演算数据（需 DMP 支持）</li><li>具有 131 LSBs/° /sec 敏感度与全格感测范围为±250、±500、±1000 与±2000° /sec的 3 轴角速度感测器(陀螺仪)</li><li>集成可程序控制，范围为±2g、±4g、±8g 和±16g 的 3 轴加速度传感器</li><li>移除加速器与陀螺仪轴间敏感度，降低设定给予的影响与感测器的飘移</li><li>自带数字运动处理(DMP: Digital Motion Processing)引擎可减少 MCU 复杂的融合演算数据、感测器同步化、姿势感应等的负荷</li><li>内建运作时间偏差与磁力感测器校正演算技术，免除了客户须另外进行校正的需求</li><li>自带一个数字温度传感器</li><li>带数字输入同步引脚(Sync pin)支持视频电子影相稳定技术与 GPS</li><li>可程序控制的中断(interrupt)，支持姿势识别、摇摄、画面放大缩小、滚动、快速下降中断、 high-G 中断、零动作感应、触击感应、摇动感应功能</li><li>VDD 供电电压为 2.5V±5%、 3.0V±5%、 3.3V±5%； VLOGIC 可低至 1.8V± 5%</li><li>陀螺仪工作电流： 5mA，陀螺仪待机电流： 5uA； 加速器工作电流：500uA，加速器省电模式电流： 40uA@10Hz</li><li>自带 1024 字节 FIFO，有助于降低系统功耗</li><li>高达 400Khz 的 IIC 通信接口</li><li>超小封装尺寸： 4x4x0.9mm（QFN）</li></ol><p>MPU6050三轴角(姿态角)<br><img src="https://img-blog.csdnimg.cn/20210527164308375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>绕向即为正方向，可根据右手螺旋定则确定方向。</strong><br>MPU6050框图：<br><img src="https://img-blog.csdnimg.cn/20210527152447545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">可以很清晰地观察到，MPU6050芯片中内置了三轴加速度传感器、三轴陀螺仪和一个温度传感器。右侧INT为中断输出脚，TCS为片选脚、AD0为设置地址脚、SCL和SDA为主IIC接口、AUX_CL和AUX_DA为从IIC接口，主要用到的是AD0、SCL、SDA。</p><p>相关寄存器(想深入了解的朋友可以看一下)结合后面的代码更容易理解一些<br>①<br><img src="https://img-blog.csdnimg.cn/20210527153154426.jpg#pic_center" alt="在这里插入图片描述"><br>DEVICE_RESE=1，复位MPU6050，复位完成后，自动清零。SLEEP=1，进入睡眠模式；SLEEP=0，正常工作模式。TEMP_DIS，用于设置是否使能温度传感器，设置为0，则使能CLKSEL[2:0]，用于选择系统时钟源，如下所示：</p><table><thead><tr><th>CLKSEL[2:0]</th><th>时钟源</th></tr></thead><tbody><tr><td>001</td><td>内部8M RC晶振</td></tr><tr><td>010</td><td>PLL，使用X轴陀螺作为参考</td></tr><tr><td>011</td><td>PLL，使用Y轴陀螺作为参考</td></tr><tr><td>100</td><td>PLL，使用Z轴陀螺作为参考</td></tr><tr><td>101</td><td>PLL，使用外部32.768Khz作为参考</td></tr><tr><td>110</td><td>PLL，使用外部19.2Mhz作为参考</td></tr><tr><td>11</td><td>保留</td></tr><tr><td>001</td><td>关闭时钟，保持时序产生电路复位状态</td></tr></tbody></table><p>总之，电源管理寄存器就是复位MPU6050<br>②<br><img src="https://img-blog.csdnimg.cn/20210527154441137.jpg#pic_center" alt="在这里插入图片描述"><br>该寄存器我们只关心FS_SEL[1:0]这两个位，用于设置陀螺仪的满量程范围：0，±250°/s；1，±500°/s；2，±1000°/s；3，±2000°/s；我们一般设置为3，即±2000°/S，因为陀螺仪的ADC为16位分辨率，所以得到灵敏度为：65536/4000=16.4LSB/(°/S)。<br>总之，陀螺仪配置寄存器就是配置陀螺仪满量程范围，设置最大<br>③<br><img src="https://img-blog.csdnimg.cn/20210527154625454.jpg#pic_center" alt="在这里插入图片描述"><br>该寄存器我们只关心AFS_SEL[1:0]这两个位，用于设置加速度传感器的满量程范围：0，±2g；1，±4g；2，±8g；3，±16g；我们一般设置为0，即±2g，因为加速度传感器的ADC也是16位，所以得到灵敏度为：65536/4=16384LSB/g。<br>总之，加速度传感器配置寄存器就是配置加速度传感器满量程范围，不宜过大<br>④<br><img src="https://img-blog.csdnimg.cn/20210527154801757.jpg#pic_center" alt="在这里插入图片描述"><br>该寄存器用于控制FIFO使能，在简单读取传感器数据的时候，可以不用FIFO，设置对应位为：0，即可禁止FIFO，设置为1，则使能FIFO。加速度传感器的三个轴，全由一个位(ACCEL_FIFO_EN)控制，只要该位为1，则加速度传感器三个通道都开启FIFO；但是陀螺仪传感器的三个轴需要一个一个设置，即XYZ轴分别配置。<br>总之，FIFO使能寄存器用于控制使能FIFO(First Input First Output)<br>⑤<br><img src="https://img-blog.csdnimg.cn/20210527160414156.jpg#pic_center" alt="在这里插入图片描述"><br>该寄存器用于设置MPU6050的陀螺仪采样频率，计算公式为：**采样频率 = 陀螺仪输出频率 / (1+SMPLRT_DIV)**。这里陀螺仪的输出频率，是1Khz或者8Khz，与数字低通滤波器（DLPF）的设置有关，当DLPF_CFG=0或7的时候，频率为8Khz，其他情况是1Khz。而且DLPF滤波频率一般设置为采样率的一半。采样率，我们假定设置为50Hz，那么：SMPLRT_DIV=1000/50-1=19。<br>总之，陀螺仪采样率分频寄存器就是用于设置陀螺仪的采样频率，如果采样频率为50Hz，那么采样周期就为1/50=20ms，即20ms采集一次陀螺仪的数据。<br>⑥<br><img src="https://img-blog.csdnimg.cn/20210527160935948.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>总之，配置寄存器就是设置数字低通滤波器的DLPF_CFG位来结合陀螺仪采样分频寄存器来共同设置采样周期。<br>⑦<br><img src="https://img-blog.csdnimg.cn/20210527162315369.jpg#pic_center" alt="在这里插入图片描述"><br>该寄存器的LP_WAKE_CTRL用于控制低功耗时的唤醒频率，用不到。剩下的6位，分别控制加速度和陀螺仪的x/y/z轴是否进入待机模式，这里我们全部都不进入待机模式，所以全部设置为：0 ，即可。<br>总之，电源管理寄存器2就是用于设置加速度传感器和陀螺仪的X/Y/Z轴是进入休眠还是正常工作。<br>⑧<img src="https://img-blog.csdnimg.cn/20210527162507349.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>加速度传感器数据输出寄存器总共由6个寄存器组成，输出X/Y/Z三个轴的加速度传感器值，高字节在前，低字节在后。<br>总之，加速度传感器数据输出寄存器就是把加速度传感器测量到的数据输出出来。<br>⑨<br><img src="https://img-blog.csdnimg.cn/2021052716305611.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>陀螺仪数据输出寄存器总共由6个寄存器组成，输出X/Y/Z三个轴的陀螺仪传感器数据，高字节在前，低字节在后。<br>总之，陀螺仪数据输出寄存器就是把陀螺仪测量到的数据输出出来。<br>⑩<br><img src="https://img-blog.csdnimg.cn/20210527163838510.jpg#pic_center" alt="在这里插入图片描述"><br>通过读取0X41（高8位）和0X42（低8位）寄存器得到，温度换算公式为：<br>Temperature = 36.53 + regval/340。其中，Temperature为计算得到的温度值，单位为℃，regval为从0X41和0X42读到的温度传感器值。<br>总之，温度传感器数据输出寄存器就是把温度寄存器测量到的数据处处出来。</p><h1 id="3-硬件连接"><a href="#3-硬件连接" class="headerlink" title="3.硬件连接"></a>3.硬件连接</h1><p><img src="https://img-blog.csdnimg.cn/20210527164235503.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>VCC</strong>:接5V电源<br><strong>GND</strong>:接地<br><strong>SCL</strong>:主IIC时钟线 (我接的PB10)<br><strong>SDA</strong>:主IIC数据线 (我接的PB11)<br><strong>AD0</strong>:地址线，接3V地址为0x68，接地地址为0x69（我接的PA15，高电平，地址为0x68）</p><h1 id="4-软件代码————官方自带库"><a href="#4-软件代码————官方自带库" class="headerlink" title="4.软件代码————官方自带库"></a>4.软件代码————官方自带库</h1><p>MPU6050处理寄存器的相关数据时需要移植几个官方库，以便将数据处理为所需要的欧拉角。正点原子共提供了五个源码，如下图：<br><img src="https://img-blog.csdnimg.cn/20210527171530241.jpg#pic_center" alt="在这里插入图片描述"><br>这些是需要在写MPU6050代码之前移植过来的，具体代码内容大家可以下载下方源码查看。</p><h1 id="5-软件代码————其他代码"><a href="#5-软件代码————其他代码" class="headerlink" title="5.软件代码————其他代码"></a>5.软件代码————其他代码</h1><p>MPU6050.h<br><strong>主要宏定义一些MPU6050寄存器的地址，方便IIC发送给寄存器数据初始化MPU6050。</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">__MPU6050_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">__MPU6050_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"mpuiic.h"</span>       </span> <span class="token comment">//MPU6050 AD0控制脚</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_AD0_CTRL</span><span class="token expression"><span class="token function">PAout</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span></span><span class="token comment">//控制AD0电平,从而控制MPU地址</span></span><span class="token comment">//#define MPU_ACCEL_OFFS_REG0X06//accel_offs寄存器,可读取版本号,寄存器手册未提到</span><span class="token comment">//#define MPU_PROD_ID_REG0X0C//prod id寄存器,在寄存器手册未提到</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_SELF_TESTX_REG</span><span class="token expression"><span class="token number">0X0D</span></span><span class="token comment">//自检寄存器X</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_SELF_TESTY_REG</span><span class="token expression"><span class="token number">0X0E</span></span><span class="token comment">//自检寄存器Y</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_SELF_TESTZ_REG</span><span class="token expression"><span class="token number">0X0F</span></span><span class="token comment">//自检寄存器Z</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_SELF_TESTA_REG</span><span class="token expression"><span class="token number">0X10</span></span><span class="token comment">//自检寄存器A</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_SAMPLE_RATE_REG</span><span class="token expression"><span class="token number">0X19</span></span><span class="token comment">//采样频率分频器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_CFG_REG</span><span class="token expression"><span class="token number">0X1A</span></span><span class="token comment">//配置寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_GYRO_CFG_REG</span><span class="token expression"><span class="token number">0X1B</span></span><span class="token comment">//陀螺仪配置寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_ACCEL_CFG_REG</span><span class="token expression"><span class="token number">0X1C</span></span><span class="token comment">//加速度计配置寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_MOTION_DET_REG</span><span class="token expression"><span class="token number">0X1F</span></span><span class="token comment">//运动检测阀值设置寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_FIFO_EN_REG</span><span class="token expression"><span class="token number">0X23</span></span><span class="token comment">//FIFO使能寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CMST_CTRL_REG</span><span class="token expression"><span class="token number">0X24</span></span><span class="token comment">//IIC主机控制寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV0_ADDR_REG</span><span class="token expression"><span class="token number">0X25</span></span><span class="token comment">//IIC从机0器件地址寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV0_REG</span><span class="token expression"><span class="token number">0X26</span></span><span class="token comment">//IIC从机0数据地址寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV0_CTRL_REG</span><span class="token expression"><span class="token number">0X27</span></span><span class="token comment">//IIC从机0控制寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV1_ADDR_REG</span><span class="token expression"><span class="token number">0X28</span></span><span class="token comment">//IIC从机1器件地址寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV1_REG</span><span class="token expression"><span class="token number">0X29</span></span><span class="token comment">//IIC从机1数据地址寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV1_CTRL_REG</span><span class="token expression"><span class="token number">0X2A</span></span><span class="token comment">//IIC从机1控制寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV2_ADDR_REG</span><span class="token expression"><span class="token number">0X2B</span></span><span class="token comment">//IIC从机2器件地址寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV2_REG</span><span class="token expression"><span class="token number">0X2C</span></span><span class="token comment">//IIC从机2数据地址寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV2_CTRL_REG</span><span class="token expression"><span class="token number">0X2D</span></span><span class="token comment">//IIC从机2控制寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV3_ADDR_REG</span><span class="token expression"><span class="token number">0X2E</span></span><span class="token comment">//IIC从机3器件地址寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV3_REG</span><span class="token expression"><span class="token number">0X2F</span></span><span class="token comment">//IIC从机3数据地址寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV3_CTRL_REG</span><span class="token expression"><span class="token number">0X30</span></span><span class="token comment">//IIC从机3控制寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV4_ADDR_REG</span><span class="token expression"><span class="token number">0X31</span></span><span class="token comment">//IIC从机4器件地址寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV4_REG</span><span class="token expression"><span class="token number">0X32</span></span><span class="token comment">//IIC从机4数据地址寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV4_DO_REG</span><span class="token expression"><span class="token number">0X33</span></span><span class="token comment">//IIC从机4写数据寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV4_CTRL_REG</span><span class="token expression"><span class="token number">0X34</span></span><span class="token comment">//IIC从机4控制寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV4_DI_REG</span><span class="token expression"><span class="token number">0X35</span></span><span class="token comment">//IIC从机4读数据寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CMST_STA_REG</span><span class="token expression"><span class="token number">0X36</span></span><span class="token comment">//IIC主机状态寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_INTBP_CFG_REG</span><span class="token expression"><span class="token number">0X37</span></span><span class="token comment">//中断/旁路设置寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_INT_EN_REG</span><span class="token expression"><span class="token number">0X38</span></span><span class="token comment">//中断使能寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_INT_STA_REG</span><span class="token expression"><span class="token number">0X3A</span></span><span class="token comment">//中断状态寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_ACCEL_XOUTH_REG</span><span class="token expression"><span class="token number">0X3B</span></span><span class="token comment">//加速度值,X轴高8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_ACCEL_XOUTL_REG</span><span class="token expression"><span class="token number">0X3C</span></span><span class="token comment">//加速度值,X轴低8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_ACCEL_YOUTH_REG</span><span class="token expression"><span class="token number">0X3D</span></span><span class="token comment">//加速度值,Y轴高8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_ACCEL_YOUTL_REG</span><span class="token expression"><span class="token number">0X3E</span></span><span class="token comment">//加速度值,Y轴低8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_ACCEL_ZOUTH_REG</span><span class="token expression"><span class="token number">0X3F</span></span><span class="token comment">//加速度值,Z轴高8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_ACCEL_ZOUTL_REG</span><span class="token expression"><span class="token number">0X40</span></span><span class="token comment">//加速度值,Z轴低8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_TEMP_OUTH_REG</span><span class="token expression"><span class="token number">0X41</span></span><span class="token comment">//温度值高八位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_TEMP_OUTL_REG</span><span class="token expression"><span class="token number">0X42</span></span><span class="token comment">//温度值低8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_GYRO_XOUTH_REG</span><span class="token expression"><span class="token number">0X43</span></span><span class="token comment">//陀螺仪值,X轴高8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_GYRO_XOUTL_REG</span><span class="token expression"><span class="token number">0X44</span></span><span class="token comment">//陀螺仪值,X轴低8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_GYRO_YOUTH_REG</span><span class="token expression"><span class="token number">0X45</span></span><span class="token comment">//陀螺仪值,Y轴高8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_GYRO_YOUTL_REG</span><span class="token expression"><span class="token number">0X46</span></span><span class="token comment">//陀螺仪值,Y轴低8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_GYRO_ZOUTH_REG</span><span class="token expression"><span class="token number">0X47</span></span><span class="token comment">//陀螺仪值,Z轴高8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_GYRO_ZOUTL_REG</span><span class="token expression"><span class="token number">0X48</span></span><span class="token comment">//陀螺仪值,Z轴低8位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV0_DO_REG</span><span class="token expression"><span class="token number">0X63</span></span><span class="token comment">//IIC从机0数据寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV1_DO_REG</span><span class="token expression"><span class="token number">0X64</span></span><span class="token comment">//IIC从机1数据寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV2_DO_REG</span><span class="token expression"><span class="token number">0X65</span></span><span class="token comment">//IIC从机2数据寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CSLV3_DO_REG</span><span class="token expression"><span class="token number">0X66</span></span><span class="token comment">//IIC从机3数据寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_I2CMST_DELAY_REG</span><span class="token expression"><span class="token number">0X67</span></span><span class="token comment">//IIC主机延时管理寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_SIGPATH_RST_REG</span><span class="token expression"><span class="token number">0X68</span></span><span class="token comment">//信号通道复位寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_MDETECT_CTRL_REG</span><span class="token expression"><span class="token number">0X69</span></span><span class="token comment">//运动检测控制寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_USER_CTRL_REG</span><span class="token expression"><span class="token number">0X6A</span></span><span class="token comment">//用户控制寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_PWR_MGMT1_REG</span><span class="token expression"><span class="token number">0X6B</span></span><span class="token comment">//电源管理寄存器1</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_PWR_MGMT2_REG</span><span class="token expression"><span class="token number">0X6C</span></span><span class="token comment">//电源管理寄存器2 </span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_FIFO_CNTH_REG</span><span class="token expression"><span class="token number">0X72</span></span><span class="token comment">//FIFO计数寄存器高八位</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_FIFO_CNTL_REG</span><span class="token expression"><span class="token number">0X73</span></span><span class="token comment">//FIFO计数寄存器低八位</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_FIFO_RW_REG</span><span class="token expression"><span class="token number">0X74</span></span><span class="token comment">//FIFO读写寄存器</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_DEVICE_ID_REG</span><span class="token expression"><span class="token number">0X75</span></span><span class="token comment">//器件ID寄存器</span></span> <span class="token comment">//如果AD0脚(9脚)接地,IIC地址为0X68(不包含最低位).</span><span class="token comment">//如果接V3.3,则IIC地址为0X69(不包含最低位).</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_ADDR</span><span class="token expression"><span class="token number">0X68</span></span></span><span class="token comment">//因为模块AD0默认接GND,所以转为读写地址后,为0XD1和0XD0(如果接VCC,则为0XD3和0XD2)  </span><span class="token comment">//#define MPU_READ    0XD1</span><span class="token comment">//#define MPU_WRITE   0XD0</span>u8 <span class="token function">MPU_Init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//初始化MPU6050</span>u8 <span class="token function">MPU_Write_Len</span><span class="token punctuation">(</span>u8 addr<span class="token punctuation">,</span>u8 reg<span class="token punctuation">,</span>u8 len<span class="token punctuation">,</span>u8 <span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//IIC连续写</span>u8 <span class="token function">MPU_Read_Len</span><span class="token punctuation">(</span>u8 addr<span class="token punctuation">,</span>u8 reg<span class="token punctuation">,</span>u8 len<span class="token punctuation">,</span>u8 <span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//IIC连续读 </span>u8 <span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>u8 reg<span class="token punctuation">,</span>u8 data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//IIC写一个字节</span>u8 <span class="token function">MPU_Read_Byte</span><span class="token punctuation">(</span>u8 reg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//IIC读一个字节</span>u8 <span class="token function">MPU_Set_Gyro_Fsr</span><span class="token punctuation">(</span>u8 fsr<span class="token punctuation">)</span><span class="token punctuation">;</span>u8 <span class="token function">MPU_Set_Accel_Fsr</span><span class="token punctuation">(</span>u8 fsr<span class="token punctuation">)</span><span class="token punctuation">;</span>u8 <span class="token function">MPU_Set_LPF</span><span class="token punctuation">(</span>u16 lpf<span class="token punctuation">)</span><span class="token punctuation">;</span>u8 <span class="token function">MPU_Set_Rate</span><span class="token punctuation">(</span>u16 rate<span class="token punctuation">)</span><span class="token punctuation">;</span>u8 <span class="token function">MPU_Set_Fifo</span><span class="token punctuation">(</span>u8 sens<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">short</span> <span class="token function">MPU_Get_Temperature</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>u8 <span class="token function">MPU_Get_Gyroscope</span><span class="token punctuation">(</span><span class="token keyword">short</span> <span class="token operator">*</span>gx<span class="token punctuation">,</span><span class="token keyword">short</span> <span class="token operator">*</span>gy<span class="token punctuation">,</span><span class="token keyword">short</span> <span class="token operator">*</span>gz<span class="token punctuation">)</span><span class="token punctuation">;</span>u8 <span class="token function">MPU_Get_Accelerometer</span><span class="token punctuation">(</span><span class="token keyword">short</span> <span class="token operator">*</span>ax<span class="token punctuation">,</span><span class="token keyword">short</span> <span class="token operator">*</span>ay<span class="token punctuation">,</span><span class="token keyword">short</span> <span class="token operator">*</span>az<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span class="token number">123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MPU6050.c<br><strong>主要是单片机通过IIC协议向MPU6050写数据读数据的函数以及MPU6050初始化函数</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"mpu6050.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"sys.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"delay.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"usart.h"</span>   </span><span class="token comment">/**********************************************函数名称：MPU_Init函数功能：初始化MPU6050函数参数：无函数返回值：0,初始化成功  其他,初始化失败**********************************************/</span>u8 <span class="token function">MPU_Init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span> u8 res<span class="token punctuation">;</span>  GPIO_InitTypeDef  GPIO_InitStructure<span class="token punctuation">;</span><span class="token function">RCC_APB2PeriphClockCmd</span><span class="token punctuation">(</span>RCC_APB2Periph_AFIO<span class="token punctuation">,</span>ENABLE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//使能AFIO时钟 </span><span class="token function">RCC_APB2PeriphClockCmd</span><span class="token punctuation">(</span>RCC_APB2Periph_GPIOA<span class="token punctuation">,</span>ENABLE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//先使能外设IO PORTA时钟 </span>  GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Pin <span class="token operator">=</span> GPIO_Pin_15<span class="token punctuation">;</span>  <span class="token comment">//端口配置</span>  GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Mode <span class="token operator">=</span> GPIO_Mode_Out_PP<span class="token punctuation">;</span>  <span class="token comment">//推挽输出</span>  GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Speed <span class="token operator">=</span> GPIO_Speed_50MHz<span class="token punctuation">;</span>  <span class="token comment">//IO口速度为50MHz</span>  <span class="token function">GPIO_Init</span><span class="token punctuation">(</span>GPIOA<span class="token punctuation">,</span> <span class="token operator">&amp;</span>GPIO_InitStructure<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//根据设定参数初始化GPIOA</span><span class="token function">GPIO_PinRemapConfig</span><span class="token punctuation">(</span>GPIO_Remap_SWJ_JTAGDisable<span class="token punctuation">,</span>ENABLE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//禁止JTAG,从而PA15可以做普通IO使用,否则PA15不能做普通IO!!!</span>MPU_AD0_CTRL<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//控制MPU6050的AD0脚为低电平,从机地址为:0X68</span><span class="token function">MPU_IIC_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//初始化IIC总线</span><span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_PWR_MGMT1_REG<span class="token punctuation">,</span><span class="token number">0X80</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//复位MPU6050</span>  <span class="token function">delay_ms</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_PWR_MGMT1_REG<span class="token punctuation">,</span><span class="token number">0X00</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//唤醒MPU6050 </span><span class="token function">MPU_Set_Gyro_Fsr</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//陀螺仪传感器,±2000dps</span><span class="token function">MPU_Set_Accel_Fsr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//加速度传感器,±2g</span><span class="token function">MPU_Set_Rate</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置采样率50Hz</span><span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_INT_EN_REG<span class="token punctuation">,</span><span class="token number">0X00</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//关闭所有中断</span><span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_USER_CTRL_REG<span class="token punctuation">,</span><span class="token number">0X00</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//I2C主模式关闭</span><span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_FIFO_EN_REG<span class="token punctuation">,</span><span class="token number">0X00</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//关闭FIFO</span><span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_INTBP_CFG_REG<span class="token punctuation">,</span><span class="token number">0X80</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//INT引脚低电平有效</span>res<span class="token operator">=</span><span class="token function">MPU_Read_Byte</span><span class="token punctuation">(</span>MPU_DEVICE_ID_REG<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token operator">==</span>MPU_ADDR<span class="token punctuation">)</span><span class="token comment">//器件ID正确,即res = MPU_ADDR = 0x68</span><span class="token punctuation">{</span><span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_PWR_MGMT1_REG<span class="token punctuation">,</span><span class="token number">0X01</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置CLKSEL,PLL X轴为参考</span><span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_PWR_MGMT2_REG<span class="token punctuation">,</span><span class="token number">0X00</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//加速度与陀螺仪都工作</span><span class="token function">MPU_Set_Rate</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置采样率为50Hz</span> <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">//地址设置错误,返回1</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//地址设置正确,返回0</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_Set_Gyro_Fsr函数功能：设置MPU6050陀螺仪传感器满量程范围函数参数：fsr:0,±250dps;1,±500dps;2,±1000dps;3,±2000dps函数返回值：0,设置成功  其他,设置失败**********************************************/</span>u8 <span class="token function">MPU_Set_Gyro_Fsr</span><span class="token punctuation">(</span>u8 fsr<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_GYRO_CFG_REG<span class="token punctuation">,</span>fsr<span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置陀螺仪满量程范围</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_Set_Accel_Fsr函数功能：设置MPU6050加速度传感器满量程范围函数参数：fsr:0,±2g;1,±4g;2,±8g;3,±16g函数返回值：0,设置成功  其他,设置失败**********************************************/</span>u8 <span class="token function">MPU_Set_Accel_Fsr</span><span class="token punctuation">(</span>u8 fsr<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_ACCEL_CFG_REG<span class="token punctuation">,</span>fsr<span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置加速度传感器满量程范围  </span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_Set_LPF函数功能：设置MPU6050的数字低通滤波器函数参数：lpf:数字低通滤波频率(Hz)函数返回值：0,设置成功  其他,设置失败**********************************************/</span>u8 <span class="token function">MPU_Set_LPF</span><span class="token punctuation">(</span>u16 lpf<span class="token punctuation">)</span><span class="token punctuation">{</span>u8 data<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>lpf<span class="token operator">&gt;=</span><span class="token number">188</span><span class="token punctuation">)</span>data<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>lpf<span class="token operator">&gt;=</span><span class="token number">98</span><span class="token punctuation">)</span>data<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>lpf<span class="token operator">&gt;=</span><span class="token number">42</span><span class="token punctuation">)</span>data<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>lpf<span class="token operator">&gt;=</span><span class="token number">20</span><span class="token punctuation">)</span>data<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>lpf<span class="token operator">&gt;=</span><span class="token number">10</span><span class="token punctuation">)</span>data<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token keyword">else</span> data<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_CFG_REG<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置数字低通滤波器  </span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_Set_Rate函数功能：设置MPU6050的采样率(假定Fs=1KHz)函数参数：rate:4~1000(Hz)  初始化中rate取50函数返回值：0,设置成功  其他,设置失败**********************************************/</span>u8 <span class="token function">MPU_Set_Rate</span><span class="token punctuation">(</span>u16 rate<span class="token punctuation">)</span><span class="token punctuation">{</span>u8 data<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>rate<span class="token operator">&gt;</span><span class="token number">1000</span><span class="token punctuation">)</span>rate<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>rate<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">)</span>rate<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span>data<span class="token operator">=</span><span class="token number">1000</span><span class="token operator">/</span>rate<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>data<span class="token operator">=</span><span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>MPU_SAMPLE_RATE_REG<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置数字低通滤波器</span> <span class="token keyword">return</span> <span class="token function">MPU_Set_LPF</span><span class="token punctuation">(</span>rate<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//自动设置LPF为采样率的一半</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_Get_Temperature函数功能：得到温度传感器值函数参数：无函数返回值：温度值(扩大了100倍)**********************************************/</span><span class="token keyword">short</span> <span class="token function">MPU_Get_Temperature</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   u8 buf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">short</span> raw<span class="token punctuation">;</span> <span class="token keyword">float</span> temp<span class="token punctuation">;</span> <span class="token function">MPU_Read_Len</span><span class="token punctuation">(</span>MPU_ADDR<span class="token punctuation">,</span>MPU_TEMP_OUTH_REG<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>    raw<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u16<span class="token punctuation">)</span>buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">|</span>buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   temp<span class="token operator">=</span><span class="token number">36.53</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>raw<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">340</span><span class="token punctuation">;</span>   <span class="token keyword">return</span> temp<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_Get_Gyroscope函数功能：得到陀螺仪值(原始值)函数参数：gx,gy,gz:陀螺仪x,y,z轴的原始读数(带符号)函数返回值：0,读取成功  其他,读取失败**********************************************/</span>u8 <span class="token function">MPU_Get_Gyroscope</span><span class="token punctuation">(</span><span class="token keyword">short</span> <span class="token operator">*</span>gx<span class="token punctuation">,</span><span class="token keyword">short</span> <span class="token operator">*</span>gy<span class="token punctuation">,</span><span class="token keyword">short</span> <span class="token operator">*</span>gz<span class="token punctuation">)</span><span class="token punctuation">{</span>  u8 buf<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>res<span class="token punctuation">;</span>res<span class="token operator">=</span><span class="token function">MPU_Read_Len</span><span class="token punctuation">(</span>MPU_ADDR<span class="token punctuation">,</span>MPU_GYRO_XOUTH_REG<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">*</span>gx<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u16<span class="token punctuation">)</span>buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">|</span>buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token operator">*</span>gy<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u16<span class="token punctuation">)</span>buf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">|</span>buf<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token operator">*</span>gz<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u16<span class="token punctuation">)</span>buf<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">|</span>buf<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span>   <span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_Get_Accelerometer函数功能：得到加速度值(原始值)函数参数：ax,ay,az:加速度传感器x,y,z轴的原始读数(带符号)函数返回值：0,读取成功  其他,读取失败**********************************************/</span>u8 <span class="token function">MPU_Get_Accelerometer</span><span class="token punctuation">(</span><span class="token keyword">short</span> <span class="token operator">*</span>ax<span class="token punctuation">,</span><span class="token keyword">short</span> <span class="token operator">*</span>ay<span class="token punctuation">,</span><span class="token keyword">short</span> <span class="token operator">*</span>az<span class="token punctuation">)</span><span class="token punctuation">{</span>    u8 buf<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>res<span class="token punctuation">;</span>  res<span class="token operator">=</span><span class="token function">MPU_Read_Len</span><span class="token punctuation">(</span>MPU_ADDR<span class="token punctuation">,</span>MPU_ACCEL_XOUTH_REG<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">*</span>ax<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u16<span class="token punctuation">)</span>buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">|</span>buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token operator">*</span>ay<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u16<span class="token punctuation">)</span>buf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">|</span>buf<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token operator">*</span>az<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u16<span class="token punctuation">)</span>buf<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">|</span>buf<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span>     <span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_Write_Len函数功能：IIC连续写(写器件地址、寄存器地址、数据)函数参数：addr:器件地址      reg:寄存器地址 len:写入数据的长度  buf:数据区函数返回值：0,写入成功  其他,写入失败**********************************************/</span>u8 <span class="token function">MPU_Write_Len</span><span class="token punctuation">(</span>u8 addr<span class="token punctuation">,</span>u8 reg<span class="token punctuation">,</span>u8 len<span class="token punctuation">,</span>u8 <span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">{</span>u8 i<span class="token punctuation">;</span><span class="token function">MPU_IIC_Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span><span class="token punctuation">(</span>addr<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//发送器件地址+写命令(0为写,1为读)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//等待应答</span><span class="token punctuation">{</span><span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//写寄存器地址</span>    <span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">//等待应答</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//发送数据</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment">//等待ACK</span><span class="token punctuation">{</span><span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_Read_Len函数功能：IIC连续读(写入器件地址后,读寄存器地址、数据)函数参数：addr:器件地址        reg:要读的寄存器地址 len:要读取的数据长度  buf:读取到的数据存储区函数返回值：0,读取成功  其他,读取失败**********************************************/</span>u8 <span class="token function">MPU_Read_Len</span><span class="token punctuation">(</span>u8 addr<span class="token punctuation">,</span>u8 reg<span class="token punctuation">,</span>u8 len<span class="token punctuation">,</span>u8 <span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">MPU_IIC_Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span><span class="token punctuation">(</span>addr<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//发送器件地址+写命令</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//等待应答</span><span class="token punctuation">{</span><span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//写寄存器地址</span>    <span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//等待应答</span>    <span class="token function">MPU_IIC_Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span><span class="token punctuation">(</span>addr<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//发送器件地址+读命令</span>    <span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//等待应答 </span><span class="token keyword">while</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>len<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span>buf<span class="token operator">=</span><span class="token function">MPU_IIC_Read_Byte</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//读数据,发送nACK </span><span class="token keyword">else</span>  <span class="token operator">*</span>buf<span class="token operator">=</span><span class="token function">MPU_IIC_Read_Byte</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//读数据,发送ACK  </span>len<span class="token operator">--</span><span class="token punctuation">;</span>buf<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//产生一个停止条件 </span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_Write_Byte函数功能：IIC写一个字节函数参数：data:写入的数据    reg:要写的寄存器地址函数返回值：0,写入成功  其他,写入失败**********************************************/</span>u8 <span class="token function">MPU_Write_Byte</span><span class="token punctuation">(</span>u8 reg<span class="token punctuation">,</span>u8 data<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">MPU_IIC_Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span><span class="token punctuation">(</span>MPU_ADDR<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//发送器件地址+写命令</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//等待应答</span><span class="token punctuation">{</span><span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>  <span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//写寄存器地址</span>  <span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//等待应答</span><span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//发送数据</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//等待ACK</span><span class="token punctuation">{</span><span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>  <span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_Read_Byte函数功能：IIC读一个字节函数参数：reg:要读的寄存器地址函数返回值：res:读取到的数据**********************************************/</span>u8 <span class="token function">MPU_Read_Byte</span><span class="token punctuation">(</span>u8 reg<span class="token punctuation">)</span><span class="token punctuation">{</span>u8 res<span class="token punctuation">;</span>  <span class="token function">MPU_IIC_Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span><span class="token punctuation">(</span>MPU_ADDR<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//发送器件地址+写命令</span><span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//等待应答 </span>  <span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//写寄存器地址</span>  <span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//等待应答</span>  <span class="token function">MPU_IIC_Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span><span class="token punctuation">(</span>MPU_ADDR<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//发送器件地址+读命令</span>  <span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//等待应答 </span>res<span class="token operator">=</span><span class="token function">MPU_IIC_Read_Byte</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//读取数据,发送nACK </span>  <span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//产生一个停止条件 </span><span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token number">123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mpuiic.h<br><strong>MPU的IIC协议函数头文件，PB11为SDA，PB10为SCL。</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">__MPUIIC_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">__MPUIIC_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"sys.h"</span></span><span class="token comment">//IO方向设置  ---PB11</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">MPU_SDA_IN</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>GPIOB<span class="token operator">-&gt;</span>CRH <span class="token operator">&amp;=</span> <span class="token number">0XFFFF0FFF</span><span class="token punctuation">;</span>GPIOB<span class="token operator">-&gt;</span>CRH <span class="token operator">|=</span> <span class="token number">8</span><span class="token operator">&lt;&lt;</span><span class="token number">12</span><span class="token punctuation">;</span><span class="token punctuation">}</span>   </span><span class="token comment">//上拉/下拉 输入模式</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">MPU_SDA_OUT</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>GPIOB<span class="token operator">-&gt;</span>CRH <span class="token operator">&amp;=</span> <span class="token number">0XFFFF0FFF</span><span class="token punctuation">;</span>GPIOB<span class="token operator">-&gt;</span>CRH <span class="token operator">|=</span> <span class="token number">3</span><span class="token operator">&lt;&lt;</span><span class="token number">12</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token comment">//推挽输出  输出模式</span></span><span class="token comment">//IO操作函数 </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_IIC_SCL</span>    <span class="token expression"><span class="token function">PBout</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> </span><span class="token comment">//SCL</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_IIC_SDA</span>    <span class="token expression"><span class="token function">PBout</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> </span><span class="token comment">//SDA </span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MPU_READ_SDA</span>   <span class="token expression"><span class="token function">PBin</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> </span><span class="token comment">//输入SDA </span></span><span class="token comment">//IIC所有操作函数</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//IIC延时2ms函数</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//初始化IIC的IO口 </span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Start</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//发送IIC开始信号</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//发送IIC停止信号</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span>u8 txd<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//IIC发送一个字节</span>u8 <span class="token function">MPU_IIC_Read_Byte</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> ack<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//IIC读取一个字节</span>u8 <span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//IIC等待ACK信号</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Ack</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//IIC发送ACK信号</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_NAck</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//IIC不发送ACK信号</span><span class="token keyword">void</span> <span class="token function">IMPU_IC_Write_One_Byte</span><span class="token punctuation">(</span>u8 daddr<span class="token punctuation">,</span>u8 addr<span class="token punctuation">,</span>u8 data<span class="token punctuation">)</span><span class="token punctuation">;</span>u8 <span class="token function">MPU_IIC_Read_One_Byte</span><span class="token punctuation">(</span>u8 daddr<span class="token punctuation">,</span>u8 addr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span class="token number">1234567891011121314151617181920212223242526272829</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mpuiic.c<br><strong>MPU的IIC协议函数编写</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"mpuiic.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"delay.h"</span></span> <span class="token comment">/**********************************************函数名称：MPU_IIC_Delay函数功能：MPU IIC延时函数，延时2ms函数参数：无函数返回值：无**********************************************/</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">delay_us</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_IIC_Init函数功能：MPU IIC初始化函数参数：无函数返回值：无**********************************************/</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       GPIO_InitTypeDef  GPIO_InitStructure<span class="token punctuation">;</span><span class="token function">RCC_APB2PeriphClockCmd</span><span class="token punctuation">(</span>RCC_APB2Periph_GPIOB<span class="token punctuation">,</span>ENABLE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//先使能外设IO PORTB时钟 </span>  GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Pin <span class="token operator">=</span> GPIO_Pin_10<span class="token operator">|</span>GPIO_Pin_11<span class="token punctuation">;</span>  <span class="token comment">//端口配置</span>  GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Mode <span class="token operator">=</span> GPIO_Mode_Out_PP<span class="token punctuation">;</span>   <span class="token comment">//推挽输出</span>  GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Speed <span class="token operator">=</span> GPIO_Speed_50MHz<span class="token punctuation">;</span>  <span class="token comment">//IO口速度为50MHz</span>  <span class="token function">GPIO_Init</span><span class="token punctuation">(</span>GPIOB<span class="token punctuation">,</span> <span class="token operator">&amp;</span>GPIO_InitStructure<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//根据设定参数初始化GPIO </span>  <span class="token function">GPIO_SetBits</span><span class="token punctuation">(</span>GPIOB<span class="token punctuation">,</span>GPIO_Pin_10<span class="token operator">|</span>GPIO_Pin_11<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//PB10,PB11 输出高</span> <span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_IIC_Start函数功能：MPU IIC发送起始信号函数参数：无函数返回值：无**********************************************/</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Start</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">MPU_SDA_OUT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//SDA线 输出</span>MPU_IIC_SDA<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    MPU_IIC_SCL<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> MPU_IIC_SDA<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>     <span class="token comment">//START:当SCL线处于高电平时,SDA线突然从高变低,发送起始信号</span><span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//钳住I2C总线，准备发送或接收数据 </span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_IIC_Stop函数功能：MPU IIC发送停止信号函数参数：无函数返回值：无**********************************************/</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">MPU_SDA_OUT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//SDA线输出</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>MPU_IIC_SDA<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//STOP:当SCL线处于高电平时,SDA线突然从低变高,发送停止信号</span> <span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> MPU_IIC_SDA<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//发送I2C总线结束信号</span><span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_IIC_Wait_Ack函数功能：MPU IIC等待信号到来函数参数：无函数返回值：1:接收应答信号成功  0:接收应答信号失败**********************************************/</span>u8 <span class="token function">MPU_IIC_Wait_Ack</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>u8 ucErrTime<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">MPU_SDA_IN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//SDA设置为输入  </span>MPU_IIC_SDA<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>MPU_READ_SDA<span class="token punctuation">)</span><span class="token punctuation">{</span>ucErrTime<span class="token operator">++</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ucErrTime<span class="token operator">&gt;</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">MPU_IIC_Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//时钟输出0</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/**********************************************函数名称：MPU_IIC_Ack函数功能：MPU IIC产生应答信号函数参数：无函数返回值：无**********************************************/</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Ack</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">MPU_SDA_OUT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MPU_IIC_SDA<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_IIC_NAck函数功能：MPU IIC不产生应答信号函数参数：无函数返回值：无**********************************************/</span>   <span class="token keyword">void</span> <span class="token function">MPU_IIC_NAck</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">MPU_SDA_OUT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MPU_IIC_SDA<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**********************************************函数名称：MPU_IIC_Send_Byte函数功能：MPU IIC发送一个字节函数参数：txd：要发送的数据函数返回值：无注意：IIC发送字节是一个一个位发送的，发送一个字节需要发送八次**********************************************/</span><span class="token keyword">void</span> <span class="token function">MPU_IIC_Send_Byte</span><span class="token punctuation">(</span>u8 txd<span class="token punctuation">)</span><span class="token punctuation">{</span>                            u8 t<span class="token punctuation">;</span>   <span class="token function">MPU_SDA_OUT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         MPU_IIC_SCL<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//拉低时钟开始数据传输</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>t<span class="token operator">&lt;</span><span class="token number">8</span><span class="token punctuation">;</span>t<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>                      MPU_IIC_SDA<span class="token operator">=</span><span class="token punctuation">(</span>txd<span class="token operator">&amp;</span><span class="token number">0x80</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">7</span><span class="token punctuation">;</span>        txd<span class="token operator">&lt;&lt;=</span><span class="token number">1</span><span class="token punctuation">;</span>       MPU_IIC_SCL<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     MPU_IIC_SCL<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token punctuation">}</span>     <span class="token comment">/**********************************************函数名称：MPU_IIC_Read_Byte函数功能：MPU IIC读取一个字节函数参数：ack: 1,发送ACK   0,发送NACK 函数返回值：接收到的数据注意：IIC读取字节是一个一个位读取的，读取一个字节需要读取八次**********************************************/</span> u8 <span class="token function">MPU_IIC_Read_Byte</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> ack<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> i<span class="token punctuation">,</span>receive<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>  <span class="token function">MPU_SDA_IN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">//SDA设置为输入</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">8</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>        MPU_IIC_SCL<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MPU_IIC_SCL<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        receive<span class="token operator">&lt;&lt;=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>MPU_READ_SDA<span class="token punctuation">)</span>receive<span class="token operator">++</span><span class="token punctuation">;</span>   <span class="token comment">//如果读到了数据</span><span class="token function">MPU_IIC_Delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ack<span class="token punctuation">)</span>        <span class="token function">MPU_IIC_NAck</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//发送nACK</span>    <span class="token keyword">else</span>        <span class="token function">MPU_IIC_Ack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//发送ACK   </span>    <span class="token keyword">return</span> receive<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token number">123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还有一些函数就不做过多赘述了，上面的代码备注已经做好了，认真吃肯定是会吃透的。多下点功夫肯定可以看懂。</p><h1 id="6-学习补充"><a href="#6-学习补充" class="headerlink" title="6.学习补充"></a>6.学习补充</h1><p><strong>补充1：FIFO</strong><br><strong>FIFO</strong>( First Input First Output)简单说就是指先进先出。由于微电子技术的飞速发展，新一代FIFO芯片容量越来越大，体积越来越小，价格越来越便宜。作为一种新型大规模集成电路，FIFO芯片以其灵活、方便、高效的特性，逐渐在高速数据采集、高速数据处理、高速数据传输以及多机处理系统中得到越来越广泛的应用。在系统设计中，以增加数据传输率、处理大量数据流、匹配具有不同传输率的系统为目的而广泛使用FIFO存储器，从而提高了系统性能。FIFO存储器是一个<strong>先入先出的双口缓冲器</strong>，即第一个进入其内的数据第一个被移出，其中一个是存储器的输入口，另一个口是存储器的输出口。对于单片FIFO来说，主要有两种结构：触发导向结构和零导向传输结构。触发导向传输结构的FIFO是由寄存器阵列构成的，零导向传输结构的FIFO是由具有读和写地址指针的双口RAM构成。详见这篇博客：<a href="https://blog.csdn.net/qq_26652069/article/details/90765269">FIFO工作原理</a><br><strong>补充2：关于PA15使用问题</strong><br>在使用PA15作为普通IO口的时候，需要禁用JTAG才可以，代码如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token function">RCC_APB2PeriphClockCmd</span><span class="token punctuation">(</span>RCC_APB2Periph_AFIO<span class="token punctuation">,</span>ENABLE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//使能AFIO时钟</span><span class="token function">GPIO_PinRemapConfig</span><span class="token punctuation">(</span>GPIO_Remap_SWJ_JTAGDisable<span class="token punctuation">,</span>ENABLE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//禁止JTAG,从而PA15可以做普通IO使用,否则PA15不能做普通IO!!!</span><span class="token number">12</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>这是个大坑</strong><br><strong>补充3：关于MPU6050参考点</strong><br>当代码烧入后，MPU的参考点是什么呢？参考点其实就是MPU6050初始化之后一开始的位置，没有一个强制的规定哪一个方向就是基准点，<strong>初始化之后的初始位置就是(0，0，0)点</strong>。<br><strong>补充4：想到了再写吧</strong></p><h1 id="7-效果展示-可以先来看这个"><a href="#7-效果展示-可以先来看这个" class="headerlink" title="7.效果展示(可以先来看这个)"></a>7.效果展示(可以先来看这个)</h1><p><img src="https://img-blog.csdnimg.cn/20210527174024629.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>PITCH(俯仰角)、ROLL(翻滚角)、YAW(偏航角)，单位均为 度。TEMP为当前温度，单位为摄氏度。</p><h1 id="8-参考链接"><a href="#8-参考链接" class="headerlink" title="8.参考链接"></a>8.参考链接</h1><p>[1]<a href="https://baike.baidu.com/item/%E9%99%80%E8%9E%BA%E4%BB%AA/84317?fr=aladdin">百度百科 陀螺仪</a><br>[2]<a href="http://www.openedv.com/docs/index.html">正点原子资料下载中心</a><br>[3]<a href="https://baike.baidu.com/item/FIFO%E5%AD%98%E5%82%A8%E5%99%A8/4530258?fr=aladdin">百度百科 FIFO储存器</a><br>[4]<a href="https://www.jianshu.com/p/1e38ad3d4bfb">姿态角Pitch、Roll、Yaw角介绍</a></p><h1 id="9-完整版代码链接"><a href="#9-完整版代码链接" class="headerlink" title="9.完整版代码链接"></a>9.完整版代码链接</h1><p><a href="https://download.csdn.net/download/lihaotian111/19131254?spm=1001.2014.3001.5501">MPU6050模块通过OLED显示姿态角源码</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>在openmv中画图</title>
      <link href="/2021/05/20/openmv-1/"/>
      <url>/2021/05/20/openmv-1/</url>
      
        <content type="html"><![CDATA[<h4 id="画线"><a href="#画线" class="headerlink" title="画线"></a>画线</h4><ul><li>image.draw_line(line_tuple, color=White) 在图像中画一条直线。<ul><li>line_tuple的格式是(x0, y0, x1, y1)，意思是(x0, y0)到(x1, y1)的直线。</li><li>颜色可以是灰度值(0-255)，或者是彩色值(r, g, b)的tupple。默认是白色</li></ul></li></ul><h4 id="画框"><a href="#画框" class="headerlink" title="画框"></a>画框</h4><ul><li>image.draw_rectangle(rect_tuple, color=White) 在图像中画一个矩形框。<ul><li>rect_tuple 的格式是 (x, y, w, h)。</li></ul></li></ul><h4 id="画圆"><a href="#画圆" class="headerlink" title="画圆"></a>画圆</h4><ul><li>image.draw_circle(x, y, radius, color=White) 在图像中画一个圆。<ul><li>x,y是圆心坐标</li><li>radius是圆的半径</li></ul></li></ul><h4 id="画十字"><a href="#画十字" class="headerlink" title="画十字"></a>画十字</h4><ul><li>image.draw_cross(x, y, size=5, color=White) 在图像中画一个十字<ul><li>x,y是坐标</li><li>size是两侧的尺寸</li></ul></li></ul><h4 id="写字"><a href="#写字" class="headerlink" title="写字"></a>写字</h4><ul><li>image.draw_string(x, y, text, color=White) 在图像中写字 8x10的像素<ul><li>x,y是坐标。使用\n, \r, and \r\n会使光标移动到下一行。</li><li>text是要写的字符串。</li></ul></li></ul><h4 id="圆十字瞄准镜例程（qvga类型摄像头）"><a href="#圆十字瞄准镜例程（qvga类型摄像头）" class="headerlink" title="圆十字瞄准镜例程（qvga类型摄像头）"></a>圆十字瞄准镜例程（qvga类型摄像头）</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sensor<span class="token punctuation">,</span> image<span class="token punctuation">,</span> timesensor<span class="token punctuation">.</span>reset<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 初始化摄像头</span>sensor<span class="token punctuation">.</span>set_pixformat<span class="token punctuation">(</span>sensor<span class="token punctuation">.</span>RGB565<span class="token punctuation">)</span> <span class="token comment"># 格式为 RGB565.</span>sensor<span class="token punctuation">.</span>set_framesize<span class="token punctuation">(</span>sensor<span class="token punctuation">.</span>QVGA<span class="token punctuation">)</span>sensor<span class="token punctuation">.</span>skip_frames<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment"># 跳过10帧，使新设置生效</span>sensor<span class="token punctuation">.</span>set_hmirror<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>sensor<span class="token punctuation">.</span>set_vflip<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    img <span class="token operator">=</span> sensor<span class="token punctuation">.</span>snapshot<span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token comment"># Take a picture and return the image.</span>    img<span class="token punctuation">.</span>draw_line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">155</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">155</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    img<span class="token punctuation">.</span>draw_line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    img<span class="token punctuation">.</span>draw_rectangle<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">145</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    img<span class="token punctuation">.</span>draw_circle<span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span>    img<span class="token punctuation">.</span>draw_cross<span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>    img<span class="token punctuation">.</span>draw_string<span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token number">135</span><span class="token punctuation">,</span> <span class="token string">"Target"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果（我学习用的摄像头垃圾，见谅）</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210611112253.png" alt="1"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#引入感光元件的模块</span><span class="token keyword">import</span> sensor<span class="token punctuation">,</span> image<span class="token punctuation">,</span> timesensor<span class="token punctuation">.</span>reset<span class="token punctuation">(</span><span class="token punctuation">)</span>                      <span class="token comment"># 初始化元器件</span>sensor<span class="token punctuation">.</span>set_pixformat<span class="token punctuation">(</span>sensor<span class="token punctuation">.</span>RGB565<span class="token punctuation">)</span> <span class="token comment"># 设置为彩色</span><span class="token comment">#设置翻转</span><span class="token comment">#水平方向翻转</span>sensor<span class="token punctuation">.</span>set_hmirror<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>sensor<span class="token punctuation">.</span>set_vflip<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment">#垂直方向翻转</span><span class="token comment">#设置图像大小</span>sensor<span class="token punctuation">.</span>set_framesize<span class="token punctuation">(</span>sensor<span class="token punctuation">.</span>QVGA<span class="token punctuation">)</span>sensor<span class="token punctuation">.</span>skip_frames<span class="token punctuation">(</span>time <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">)</span>     <span class="token comment"># #跳过n张照片，在更改设置后，跳过一些帧，等待感光元件变稳定。</span>clock <span class="token operator">=</span> time<span class="token punctuation">.</span>clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment"># Create a clock object to track the FPS.</span>sensor<span class="token punctuation">.</span>set_auto_gain<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment">#自动增益开启（True）或者关闭（False）。在使用颜色追踪时，需要关闭自动增益。</span>sensor<span class="token punctuation">.</span>set_auto_whitebal<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment">#自动白平衡开启（True）或者关闭（False）。在使用颜色追踪时，需要关闭自动白平衡。</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    img <span class="token operator">=</span> sensor<span class="token punctuation">.</span>snapshot<span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token comment"># Take a picture and return the image.</span>    img<span class="token punctuation">.</span>draw_line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">145</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    img<span class="token punctuation">.</span>draw_line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    img<span class="token punctuation">.</span>draw_rectangle<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">145</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    img<span class="token punctuation">.</span>draw_circle<span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span>    img<span class="token punctuation">.</span>draw_cross<span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>    img<span class="token punctuation">.</span>draw_string<span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token string">"Target！"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还有这种的，需要其他样式的话，根据代码和注释魔改即可。</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210611112310.png" alt="2"></p>]]></content>
      
      
      <categories>
          
          <category> openmv </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openmv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>柯西积分公式</title>
      <link href="/2021/05/09/ke-xi-ji-fen-gong-shi/"/>
      <url>/2021/05/09/ke-xi-ji-fen-gong-shi/</url>
      
        <content type="html"><![CDATA[<iframe id="b" class="b video_pc" src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/BV1uA411j7jA?from=search&amp;seid=8534947394227717108" frameborder="0" framespacing="0" allowfullscreen="true" width="800" height="600" controls="controls" autoplay="autoplay" quality="high"></video>></iframe><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 复变函数 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
